{"version":3,"sources":["src/app.ts","src/environment.ts","src/main.ts","src/classes/data-classes.ts","src/classes/error.ts","src/resources/common.ts","src/resources/data.ts","src/resources/index.ts","src/resources/mock.ts","src/resources/elements/checkbox.ts","src/resources/elements/checkboxlist.ts","src/resources/elements/datepicker.ts","src/resources/elements/dropdown.ts","src/resources/elements/duelingpicklist.ts","src/resources/elements/input.ts","src/resources/elements/modal.ts","src/resources/elements/money.ts","src/resources/elements/multiselect.ts","src/resources/elements/phone.ts","src/resources/elements/radiogroup.ts","src/resources/elements/radiolist.ts","src/resources/elements/ssn.ts","src/resources/elements/text.ts","src/resources/elements/typeahead.ts","src/resources/elements/common/element-util.ts","app.html","resources/elements/checkboxlist.html","resources/elements/datepicker.html","resources/elements/dropdown.html","resources/elements/duelingpicklist.html","resources/elements/input.html","resources/elements/modal.html","resources/elements/multiselect.html","resources/elements/typeahead.html","resources/elements/checkbox.pug","resources/elements/fileupload.pug","resources/elements/money.pug","resources/elements/phone.pug","resources/elements/radiogroup.pug","resources/elements/radiolist.pug","resources/elements/ssn.pug","resources/elements/text.pug"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { inject, TaskQueue } from \"aurelia-framework\";\r\nimport {Data} from \"./resources/data\";\r\nimport {Common} from \"./resources/common\";\r\nimport {Mock} from \"./resources/mock\";\r\nimport {Promise} from \"bluebird\";\r\nimport {IdName} from \"./classes/data-classes\";\r\nimport * as moment from 'moment';\r\nimport {CustomError} from './classes/error';\r\nimport { transform } from \"typescript\";\r\nimport * as _ from \"lodash\";\r\n\r\n@inject(Data, Mock, Common, TaskQueue)\r\nexport class App {\r\n    private data: Data;\r\n    private mock: Mock;\r\n    private common: Common;\r\n    private taskQueue: TaskQueue;\r\n    private isLoaded = false;\r\n    private isLoading: boolean = false;\r\n    private isInSaveProcess: boolean = true;\r\n    private currentErrorMessage: string = '';\r\n\r\n    private strMessage: string = \"\";\r\n\r\n  constructor(private _data: Data, private _mock: Mock, private _common: Common, private _taskQ: TaskQueue){\r\n    this.data = _data;\r\n    this.mock = _mock;\r\n    this.common = _common;\r\n    this.taskQueue = _taskQ;\r\n    this.currentErrorMessage = '';\r\n\r\n    console.log('Constructor Firing');\r\n    // Load initial page data in promise\r\n    Promise.join(\r\n      this.loadData(),\r\n    )\r\n    .then((results: any) => {\r\n      // console.log('@@@@ This Load Data', this);\r\n    }).catch((err) => {\r\n      console.log('Constructor: Catching error after promise in constructor.');\r\n      this.currentErrorMessage = err;      \r\n    });\r\n  }\r\n  \r\n  public loadData() {\r\n    return new Promise((resolve, reject) => {\r\n      if (window[\"MDB\"].isTest) {\r\n        console.log('Loading Mock Data');\r\n        this.isLoading = true;      \r\n        // LOAD MOCK DATA\r\n      \r\n        // This will make the loading icon go away and unblock the UI\r\n        this.isLoaded = true;\r\n        this.isLoading = false;\r\n        resolve(\"success\");\r\n      } else {\r\n        this.isLoading = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  // This is called once the UI is fully attached\r\n  public attached() {\r\n  }\r\n\r\n  public closeError = () => {\r\n    this.currentErrorMessage = '';\r\n  }\r\n\r\n  // This is the save function for the Form, runs in Promise Async\r\n  public Save = () => {\r\n    if(this.common.validateInputs('default')) {\r\n      // console.log('@@@@@ Form Valid');\r\n      this.isLoading = true;\r\n      \r\n    } else {\r\n      console.log('@@@@@ Form Invalid');\r\n    }\r\n  }\r\n}","export default {\r\n  debug: true,\r\n  testing: true\r\n};\r\n","import {Aurelia} from 'aurelia-framework'\r\nimport environment from './environment';\r\n\r\nexport function configure(aurelia: Aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .feature('resources');\r\n\r\n  if (environment.debug) {\r\n    aurelia.use.developmentLogging();\r\n  }\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n","import { EPERM } from \"constants\";\r\n\r\n/**\r\n * All the data classes you need for the app, some people might seperate these.\r\n */\r\nexport class IdName {\r\n    public attributes?: any;\r\n    public Id: string;\r\n    public Name?: string;\r\n}\r\n\r\nexport class Case {   \r\n    public Id?: string; //string\r\n    public Name?: string; //string\r\n    public RecordTypeId?: string;\r\n    public AccountId?: string;\r\n    public Cloud_Project__c?: string;\r\n    public Project__c?: string;\r\n    public ContactId?: string;\r\n    public Product__c?: string;\r\n    public MongoDB_Version__c?: string;\r\n    public Storage_Engine__c?: string;\r\n    public Level_of_Effort__c?: string;\r\n    public Root_Cause__c?: string;\r\n    public Autoclose_Allowed_Date__c?: number;\r\n    public Severity__c?: string;\r\n    public Subject?: string;\r\n    public Description?: string;\r\n    public Resolution__c?: string;\r\n    public Status?: string;\r\n    public Components__c?: string;\r\n}\r\n\r\nexport class Account {\r\n    public attributes?: any;    \r\n    public Id: string; //string\r\n    public Name?: string; //string\r\n    public RecordTypeId?: string;\r\n    public CurrencyIsoCode?: string;    \r\n}\r\n\r\nexport class Project {\r\n    public attributes?: any;\r\n    public Id: string;\r\n    public Name: string;\r\n    public Account__c?: string;\r\n    public CreatedDate?: Date;\r\n    public Onboarding_Status__c?: string;\r\n    public CurrencyIsoCode?: string;    \r\n    public Use_Case_Type__c?: string;\r\n    public Use_Case__c?: string;\r\n    public Department__c?: string;\r\n    public Description__c?: string;\r\n    public View_In_Clienthub__c?: string;\r\n    public Support_Expiration_Date__c?: Date;\r\n    public Support_Ultimate_Date__c?: Date;    \r\n    public SupportExpirationDateString?: string;\r\n    public SupportUltimateDateString?: string;\r\n    public CurrentlyAssociated?: boolean;\r\n    public Associate?: boolean;\r\n}\r\n\r\nexport class Owner {\r\n    public attributes?: any;    \r\n    public Id: string;\r\n    public Name: string;\r\n    public CurrencyIsoCode?: string;\r\n}\r\n\r\nexport class Contact {\r\n    public Id?: string;\r\n    public CurrencyIsoCode?: string;    \r\n    public attributes?: any;    \r\n    public Name?: string;\r\n    public Email?: string;\r\n    public RecordTypeId?: string;\r\n    public Community_User_Status__c?: string;\r\n    public FCRM__FCR_Status__c?: string;\r\n    public Account?: Account;\r\n}","export class CustomError extends Error {\r\n    details: any;\r\n\r\n    constructor(message: string, json: any) {\r\n        if (json && json.message) {\r\n            super(message + \": \" + json.message);\r\n        } else {\r\n            super(message);\r\n        }\r\n        this.details = json;\r\n    }\r\n}\r\n","import { inject, LogManager, TaskQueue } from \"aurelia-framework\";\r\nimport { CustomError } from \"../classes/error\";\r\nimport {Data} from \"./data\";\r\n\r\n@inject(TaskQueue, Data)\r\nexport class Common {\r\n\r\n    public taskQueue: TaskQueue;\r\n    public data: Data;\r\n    public globalInputClearFunctions: Object = {};\r\n    public globalValidationFunctions: Object = {};\r\n\r\n    constructor(private _taskQ: TaskQueue, private _data: Data) {\r\n        this.taskQueue = _taskQ;\r\n        this.data = _data;\r\n    }\r\n\r\n    /**\r\n     * All a- elements wire to this function for being cleared without calling validation.\r\n     */\r\n    public clearInputs(formName, clearOnlyValidation = null) { // string or null\r\n        if (clearOnlyValidation == null) { clearOnlyValidation = false; }\r\n        if (!formName) { formName = \"default\"; }\r\n        // if you passed a form name, sweet, we'll clear those functions\r\n        // if you didn't pass a form name, we'll reset default form\r\n        if (this.globalInputClearFunctions[formName]) {\r\n            this.globalInputClearFunctions[formName].forEach((f) => { f(clearOnlyValidation); });\r\n        }\r\n    }\r\n    /**\r\n     * All a- elements wire to this function for being validated.\r\n     */\r\n    public validateInputs(formName: string): boolean { // string or null\r\n        if (!formName) { formName = \"default\"; }\r\n        let isValid = true;\r\n        // if you passed a form name, sweet, we'll check those functions\r\n        // if you didn't pass a form name, we'll check default form\r\n        if (this.globalValidationFunctions[formName]) {\r\n            this.globalValidationFunctions[formName].forEach((f) => {\r\n                if (!f()) {\r\n                    isValid = false;\r\n                }\r\n            });\r\n        }\r\n\r\n        if (!isValid) {\r\n            this.taskQueue.queueMicroTask(() => {\r\n                const list = document.getElementsByClassName(\"has-danger\");\r\n                if (list.length) {\r\n                    scrollTo(0, (<HTMLElement>list[0]).offsetTop - 60);\r\n                }\r\n            });\r\n        } // scroll to first error\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Global Error Handler usage:\r\n     *         }).catch(this.common.errorHandler);\r\n     */\r\n    public errorHandler = (e: any): void => {\r\n        // tslint:disable-next-line:no-console\r\n        console.log(\"*** Error Handler: \");\r\n        // tslint:disable-next-line:no-console\r\n        console.log(e);\r\n        // let wasHandled = false;\r\n        if (e.constructor === TypeError) {\r\n            e = new CustomError(e.message, { errorCode: e.message, message: e.stack, name: \"TypeError\" });\r\n        }\r\n        if(e.faultcode == \"sf:INVALID_SESSION_ID\") {\r\n            e = new CustomError(e.faultstring, { errorCode: e.faultcode, message: e.detail, name: \"Bad Session\"});\r\n            this.data.criticalErrors.push(e);\r\n            location.reload();\r\n        }\r\n        // e.message is the errorCode in most cases\r\n        // this.data._customErrors.push(e);\r\n        // switch (e.errorCode) {\r\n        //     case \"INVALID_TOKEN\":\r\n        //         // dude you are so logged out\r\n        //         location.href = location.origin + \"/login\";\r\n        //         break;\r\n        //     case \"INVALID_SESSION_ID\":\r\n        //         // dude you are so logged out\r\n        //         location.href = location.origin + \"/login\";\r\n        //         break;\r\n        //     case \"USER_AUTHENTICATION_FAILED\":\r\n        //         // Error with Docusign Credentials\r\n        //         this.router.navigate(\"#/error/docusign/authentication-error\");\r\n        //         break;\r\n        //     default:\r\n        //         // Un-Specified Custom Error\r\n        //         this.router.navigate(\"#/error\");\r\n        //         break;\r\n        // }\r\n    }\r\n\r\n    public mobilecheck(): boolean {\r\n        let check = false;\r\n        ((a) => { if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge|maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) check = true; })(navigator.userAgent || navigator.vendor || window[\"opera\"]);\r\n        return check;\r\n    }\r\n    public mobileAndTabletcheck(): boolean {\r\n        let check = false;\r\n        ((a) => { if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge|maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) check = true; })(navigator.userAgent || navigator.vendor || window[\"opera\"]);\r\n        return check;\r\n    }\r\n\r\n    /**\r\n     * Updates the DOM for bootstrap Radio buttons to be 'active'\r\n     * This is used where we need to update the model as radio is selected\r\n     * @param {$event} e\r\n     *   js event\r\n     * @return\r\n     *   void\r\n     */\r\n    public bsRadio(e: any): void {\r\n        // clear all other active elements, and their children inputs\r\n        for (let elem of e.target.parentElement.parentElement.children) {\r\n            elem.classList.remove(\"active\");\r\n            for (let inp of elem.children) {\r\n                inp.checked = false;\r\n            }\r\n        }\r\n        e.target.parentElement.classList.add(\"active\");\r\n    }\r\n\r\n    /**\r\n     * Updates the DOM for bootstrap Checkbox buttons to be 'active'\r\n     * This is used where we need to update the model as radio is selected\r\n     *\r\n     * @param {$event} e\r\n     *   js event\r\n     * @return\r\n     * void\r\n     */\r\n    public bsCheckbox(e: any): void {\r\n        // clear all active elements\r\n        if (e.target.parentElement.classList.contains(\"active\")) {\r\n            e.target.parentElement.classList.remove(\"active\");\r\n        }\r\n        else {\r\n            e.target.parentElement.classList.add(\"active\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns active class name if the item should be selected\r\n     * Uses:\r\n     *  1. Pass 2 string values to check if they match\r\n     *  2. Pass an array and a string, to check if the string exists in the array\r\n     *  3. Pass 2 objects, and a prop, to check if they match by prop.\r\n     *  4a. Pass an array, an object, to check if the object matches against the array of objects.\r\n     *  4b. Pass an array, an object, and a prop, to check if the prop value of the given object matches against the array of objects.\r\n     *\r\n     * @param {array of object, array, or variable} obj\r\n     *   SelectedItem(s) to check val against\r\n     * @param {object or variable} val\r\n     *   Current Item to check\r\n     * @param {string} prop\r\n     *   Property to compare if previous were objects\r\n     * @return\r\n     *   String 'active' or ''\r\n     * Example:   obj = [{id: 1234, name: \"bob\"},{id: 321, name: \"bob\"}]\r\n     *           val = {id: 1234, name:\"bob\"}\r\n     *           prop = \"id\"\r\n     * Would return 'active'.\r\n     */\r\n    public isActive(obj: any, val: any, prop: any): string {\r\n        if (val == null || obj == null) { return \"\"; }\r\n        else if (obj.constructor === Array && val.constructor === Object && prop) {\r\n            for (const v of obj) { if (v[prop] === val[prop]) { return \"active\"; } }\r\n            return \"\";\r\n        }\r\n        else if (obj.constructor === Array && val.constructor === Object && !prop) {\r\n            for (const v of obj) { if (v === val) { return \"active\"; } }\r\n            return \"\";\r\n        }\r\n        else if (obj.constructor === Array) {\r\n            for (const v of obj) { if (v === val) { return \"active\"; } }\r\n            return \"\";\r\n        }\r\n        else if (obj.constructor === Object && val.constructor === Object && prop) {\r\n            if (obj[prop] === val[prop]) { return \"active\"; }\r\n            return \"\";\r\n        }\r\n        else if ((obj.constructor === Number && val.constructor === Number)\r\n            || (obj.constructor === String && val.constructor === String)) {\r\n            if (obj === val) { return \"active\"; }\r\n            return \"\";\r\n        }\r\n        else {\r\n           // logger.warn(\"isActive was passed incorrect parameter types, and has returned ''\");\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    public clearObjectValues(objToClear): any {\r\n        Object.keys(objToClear).forEach((param) => {\r\n            if (objToClear[param] == null) {\r\n                // nothing\r\n            }\r\n            else if (objToClear[param] != null && (objToClear[param].constructor === Object)) {\r\n                this.clearObjectValues(objToClear[param]);\r\n            } else if (objToClear[param] === true || objToClear[param] === false) {\r\n                // set bools to false\r\n                objToClear[param] = false;\r\n            } else if (objToClear[param] != null && (objToClear[param].constructor === Date)) {\r\n                objToClear[param] = null;\r\n            } else {\r\n                objToClear[param] = \"\";\r\n            }\r\n        });\r\n        return objToClear;\r\n    }\r\n\r\n    /**\r\n     *  Returns Array of Strings valid for the index provided\r\n     *\r\n     * @param {array of object} objPicklistValues\r\n     *   Array of Picklist Values objects\r\n     * @param {integer value} selectedIndex\r\n     *   Current Index of item selected in parent field\r\n     *   used to filter values in provided object of\r\n     *   Picklist values\r\n     * @return array of objects with string and index\r\n     * index is needed for original place in array from SF\r\n     */\r\n    public getDependentValues(objPicklistValues: any, selectedIndex: number): any {\r\n        // Iterate over picklist value object and check if it is a\r\n        // dependent value for the parent selected index value\r\n        const arrayObjPicklistValues = [];\r\n        objPicklistValues.forEach((v, i) => {\r\n            // console.log(v);\r\n            // console.log(i);\r\n            if (this.isDependentValue(selectedIndex, v.validFor)) {\r\n                let objPicklistValue = {\r\n                    index: i,\r\n                    value: v.value\r\n                };\r\n                arrayObjPicklistValues.push(objPicklistValue);\r\n            }\r\n        });\r\n        return arrayObjPicklistValues;\r\n    }\r\n\r\n    /**\r\n     * Returns boolean for the index provided and ValidFor\r\n     * base64 from Salesforce Field Metadata\r\n     *\r\n     * @param {Index ID} index\r\n     *   Index ID of the value chosen by the parent\r\n     *   controlling field\r\n     * @param {base64 value} validFor\r\n     *   Current Item in Picklist Values to check\r\n     *   if valid for the parent selected value index\r\n     *   this input value is in base64 enc\r\n     * @return boolean\r\n     */\r\n    public isDependentValue(index: number, validFor: string): boolean {\r\n        const decoded = atob(validFor);\r\n        const bits = decoded.charCodeAt(index >> 3);\r\n\r\n        return ((bits & (0x80 >> (index % 8))) !== 0);\r\n    }\r\n\r\n    public generateGuid(): string {\r\n        function s4() {\r\n            return Math.floor((1 + Math.random()) * 0x10000)\r\n                .toString(16)\r\n                .substring(1);\r\n        }\r\n        return s4() + s4() + \"-\" + s4() + \"-\" + s4() + \"-\" +\r\n            s4() + \"-\" + s4() + s4() + s4();\r\n    }\r\n\r\n \r\n    /**\r\n     * Compares two objects and returns true if they have identical keys/values\r\n     *\r\n     * @param a 1st object to compare\r\n     * @param b 2nd object to compare\r\n     */\r\n    objectsAreEquivalent(a, b) {\r\n        // Create arrays of property names\r\n        const aProps = Object.getOwnPropertyNames(a);\r\n        const bProps = Object.getOwnPropertyNames(b);\r\n\r\n        // If number of properties is different,\r\n        // objects are not equivalent\r\n        if (aProps.length != bProps.length) {\r\n            return false;\r\n        }\r\n\r\n        for (let i = 0; i < aProps.length; i++) {\r\n            const propName = aProps[i];\r\n\r\n            // If values of same property are not equal,\r\n            // objects are not equivalent\r\n            if (a[propName] !== b[propName]) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        // If we made it this far, objects\r\n        // are considered equivalent\r\n        return true;\r\n    }\r\n\r\n    /*\r\n    * If a sub path is specified on the route\r\n    * scroll to that section\r\n    * @param appName the name of the app that is currently runnning\r\n    * @param cOffset an optional offset\r\n    */\r\n    // public scrollToSection(appName?: any, cOffset?: any) {\r\n    //     // get the current scroll position to include with top\r\n    //     const bodyElement = document.getElementsByTagName(\"BODY\")[0];\r\n    //     bodyElement.scrollTop = 0;\r\n    //     let scrollPosition = 0; //window.scrollY;\r\n    //     let offset = 0;\r\n    //     // if (cOffset) {\r\n    //     //     offset = cOffset;\r\n    //     // } else if (appName) {\r\n    //     //     offset = this.getOffset(appName);\r\n    //     // } else {\r\n    //     //     offset = 0;\r\n    //     // }\r\n\r\n    //     let subPath = this.getSubPath();\r\n    //     if (subPath) {\r\n    //         // get the element to scroll to\r\n    //         let scrollToElement = document.getElementsByName(subPath);\r\n    //         // get the coordinates\r\n    //         let coordinates = scrollToElement[0].getBoundingClientRect();\r\n    //         // get the body\r\n    //         let bodyElement = document.getElementsByTagName(\"BODY\")[0];\r\n    //         // determine the postion of the element and subtract the static elements\r\n    //         // i.e. button bar, client header, etc\r\n    //         bodyElement.scrollTop = (coordinates.top + scrollPosition) - offset;\r\n    //     }\r\n    // }\r\n\r\n\r\n    public yesNoToBoolean(value: any) {\r\n        let rtnValue: any = \"\";\r\n        if (value === \"Yes\") {\r\n            rtnValue =  true;\r\n        } else if (value === \"No\") {\r\n            rtnValue = false;\r\n        } else if (value === true) {\r\n            rtnValue = \"Yes\";\r\n        } else if (value === false) {\r\n            rtnValue = \"No\";\r\n        }\r\n\r\n        return rtnValue;\r\n    }\r\n\r\n    public getGUID() {\r\n            return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n              var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n              return v.toString(16);\r\n            });\r\n    }\r\n    public getID() {\r\n        return 'GENxxxxxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n          var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n          return v.toString(16);\r\n        });\r\n    }\r\n    \r\n    public getParams = (query) => {\r\n        if (!query) {\r\n            return { };\r\n        }\r\n\r\n        return (/^[?#]/.test(query) ? query.slice(1) : query)\r\n            .split(\"&\")\r\n            .reduce((params, param) => {\r\n            let [ key, value ] = param.split(\"=\");\r\n            params[key] = value ? decodeURIComponent(value.replace(/\\+/g, \" \")) : \"\";\r\n            return params;\r\n            }, { });\r\n    }\r\n}\r\n","import {IdName, Case} from \"../classes/data-classes\";\r\nimport * as moment from 'moment';\r\nimport * as _ from 'lodash';\r\n\r\nexport class Data {\r\n    public criticalErrors: any[] = [];\r\n\r\n    // Vars for Case\r\n    public ProductChoices: any[];\r\n    public SeverityChoices: any[];\r\n    public MongoDBVersionChoices: any[];\r\n    public StorageEngineChoices: any[];\r\n    public RootCauseChoices: any[];\r\n    public LevelOfEffortChoices: any[];\r\n    public ComponentsChoices: any[];\r\n\r\n    // This is called on page load if there is a URL Param, also used if project is in URL after the project is loaded\r\n    public loadAccountById(strID) {\r\n        if(strID) {\r\n            let query = \"SELECT Id, Name, Account_Country__c FROM Account WHERE ID = '\" + strID + \"'\";\r\n            console.log(\"INFO [data] Running Soql: \" + query);\r\n            return new Promise(function(resolve, reject) {\r\n                sforce.connection.query(query, {onSuccess: resolve, onFailure: reject});\r\n            });\r\n        } else {\r\n            return new Promise(function(resolve, reject) {\r\n                resolve();\r\n            });\r\n        }\r\n    }\r\n\r\n    public loadProjectById(strID) {\r\n        if(strID) {\r\n            let query = \"SELECT Id, Name, Account__c, Onboarding_Status__c, Account__r.Name, Account__r.Id, Account__r.Account_Country__c FROM Project__c WHERE ID = '\" + strID + \"'\";\r\n            console.log(\"INFO [data] Running Soql: \" + query);\r\n            return new Promise(function(resolve, reject) {\r\n                sforce.connection.query(query, {onSuccess: resolve, onFailure: reject});\r\n            });\r\n        } else {\r\n            return new Promise(function(resolve, reject) {\r\n                resolve();\r\n            });\r\n        }\r\n    }\r\n\r\n    public loadCloudProjectById(strID) {\r\n        if(strID) {\r\n            let query = \"SELECT Id, Name, Group_Id__c, Support_Ultimate_Date__c, Account__c, Account__r.Name, Account__r.Id, Account__r.Account_Country__c FROM Cloud_Project__c WHERE ID = '\" + strID + \"'\";\r\n            console.log(\"INFO [data] Running Soql: \" + query);\r\n            return new Promise(function(resolve, reject) {\r\n                sforce.connection.query(query, {onSuccess: resolve, onFailure: reject});\r\n            });\r\n        } else {\r\n            return new Promise(function(resolve, reject) {\r\n                resolve();\r\n            });\r\n        }\r\n    }\r\n\r\n    public AddNewCase(objCase: Case) {\r\n        return new Promise(function(resolve, reject) {\r\n            CaseCreateController.AddNewCase(objCase,\r\n                (result, event) => {\r\n                    if (event.status && result) {\r\n                        resolve(result);\r\n                    } else {\r\n                        reject(Error(event.message));\r\n                    }\r\n                });\r\n        });\r\n    }\r\n\r\n    public sforceQuery(query) {\r\n        console.log(\"INFO [data] Running Soql: \" + query);\r\n        return new Promise(function(resolve, reject) {\r\n            sforce.connection.query(query, {onSuccess: resolve, onFailure: reject});\r\n        });\r\n    }\r\n\r\n    public sforceDescribe(object) {\r\n        return new Promise(function(resolve, reject) {\r\n            sforce.connection.describeSObject(object, {onSuccess: resolve, onFailure: reject});\r\n        });\r\n    }\r\n\r\n    // This will return the Record Type Info for the specified Record Type ID on the object\r\n    public sforceDescribeLayout(object, layoutname, recordTypeID) {\r\n        return new Promise(function(resolve, reject) {\r\n            sforce.connection.describeLayout(object, layoutname, [recordTypeID], {onSuccess: resolve, onFailure: reject});\r\n        });\r\n    }\r\n   \r\n    public getPicklistValues(glob, name) {\r\n        let results = [];\r\n        if (glob.fields) {\r\n            glob.fields.forEach((f) => {\r\n                if (f.name == name) {\r\n                    f.picklistValues.forEach((pv) => {\r\n                        if (pv.active == \"true\") {\r\n                            results.push({label: pv.label, value: pv.value});\r\n                        } \r\n                    });\r\n                    return results; //break loop.\r\n                }\r\n            });\r\n        }\r\n        return results;\r\n    }\r\n\r\n    // Used in conjunction with the Describe layout call to parse picklists by record type active values\r\n    public getPicklistValuesByRecordType(glob, name) {\r\n        let results = [];\r\n        if (glob.recordTypeMappings && glob.recordTypeMappings.picklistsForRecordType) {\r\n            glob.recordTypeMappings.picklistsForRecordType.forEach((f) => {\r\n                if (f.picklistName == name) {\r\n                    f.picklistValues.forEach((pv) => {\r\n                        if (pv.active == \"true\") {\r\n                            results.push({label: pv.label, value: pv.value});\r\n                        } \r\n                    });\r\n                    return results; //break loop.\r\n                }\r\n            });\r\n        }\r\n        return results;\r\n    }\r\n}\r\n\r\n","import {FrameworkConfiguration} from 'aurelia-framework';\r\n\r\nexport function configure(config: FrameworkConfiguration) {\r\n  config.globalResources([\r\n    \"./elements/input\"\r\n    , \"./elements/checkboxlist\"\r\n    , \"./elements/datepicker\"\r\n    , \"./elements/dropdown\"\r\n    , \"./elements/input\"\r\n    , \"./elements/modal\"\r\n    , \"./elements/radiogroup\"\r\n    , \"./elements/radiolist\"\r\n    , \"./elements/typeahead\"\r\n    , \"./elements/money\"\r\n    , \"./elements/ssn\"\r\n    , \"./elements/text\"\r\n    , \"./elements/duelingpicklist\"\r\n    , \"./elements/multiselect\"\r\n    , \"./elements/phone\"]);\r\n}\r\n","import {Case} from \"../classes/data-classes\";\r\n/**\r\n * If we are running locally, this will mock data.\r\n */\r\nexport class Mock {\r\n    /** Generated from\r\n     * Saleforce Debug Console - Execute Anonymous\r\n       List<Account> f = [SELECT Id,Name FROM Account WHERE Name = 'Test Americas' order by name];\r\n       String j = JSON.serialize(f);\r\n       system.debug(j);\r\n      */\r\n    // MOCK DATA FOR CASE\r\n    public ProductChoices: any[] = [\r\n      {\"label\":\"MongoDB Enterprise Advanced\",\"value\":\"MongoDB Enterprise Advanced\"}\r\n      ,{\"label\":\"MongoDB\",\"value\":\"MongoDB\"}\r\n      ,{\"label\":\"Atlas\",\"value\":\"Atlas\"}];\r\n  }\r\n","import { Common } from \"../common\";\r\nimport ElementUtil from \"./common/element-util\";\r\nimport {autoinject, bindable, bindingMode, customElement, ObserverLocator, TaskQueue} from \"aurelia-framework\";\r\n\r\n/*\r\n* This is a checkbox\r\n*/\r\n\r\n@customElement(\"ce-checkbox\")\r\n@autoinject()\r\nexport class CECheckbox {\r\n    public common: Common;\r\n    public taskQueue: TaskQueue;\r\n    public observerLocator: ObserverLocator;\r\n\r\n\r\n    /** @param */\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public item: Boolean;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public displayAttribute: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public valueAttribute: string;\r\n\r\n    // default options for all elements, must be set here, because base class cant declare bindables\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public disabled: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public label: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public secondaryLabel: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public pre: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public instructions: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public placeholder: string = \"\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public warningMsg: string = \"Warning\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public isWarning: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public required: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public errorMsg: string = \"Value required\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public isValid: boolean = true;\r\n\r\n    @bindable public formName: string = \"default\";\r\n    @bindable public changing: Function;\r\n    @bindable public change: Function;\r\n    @bindable public validate: Function;\r\n\r\n    private _emptyValue: boolean = false;\r\n    private _charLimitForStacked: Number = 42;\r\n    private _charLimitForStackedLongText: Number = 120;\r\n    private _isStackedClass: boolean = false;\r\n    private _isStackedLongText: boolean = false;\r\n\r\n    private _areObjects: boolean = false;\r\n    private _activeMap: boolean[];\r\n    private _arrayObserver: any;\r\n    private _validate: Function;\r\n    private _formGroup: HTMLElement; // element ref\r\n    private _clear: Function; // set in inheritor\r\n    private _myValidator: Function; // set in inheritor\r\n\r\n    constructor(observerLocator: ObserverLocator, common: Common, taskQueue: TaskQueue) {\r\n        this.common = common;\r\n        this.taskQueue = taskQueue;\r\n        this.observerLocator = observerLocator;\r\n\r\n        this._validate = this.defaultValidate;\r\n        // clear is called by the \r\n        this._clear = (onlyClearValidation: boolean) => {\r\n            this.isValid = true;\r\n            if (!onlyClearValidation) {\r\n                this.item = this._emptyValue;\r\n             }\r\n        };\r\n        this._myValidator = () => {\r\n                if (this.required && ElementUtil.isVisible(this._formGroup)) {\r\n                    this.isValid =  this._validate({ item: this.item });\r\n                }\r\n                return this.isValid; };\r\n    }\r\n\r\n    public attached() {\r\n        this.isValid = true;\r\n        if (this.validate) { this._validate = this.validate; }\r\n        ElementUtil.attached(this.common, this.formName, this.required, this._clear, this._myValidator);\r\n    }\r\n\r\n    public itemChanged(newValue: any, oldValue: any) {\r\n        if (this.required && ElementUtil.isVisible(this._formGroup) && newValue !== oldValue) {\r\n            this.isValid = this._validate({ item: this.item });\r\n            console.log(\"DEBUGGING CHECKBOX:\" + this.item);\r\n        }\r\n        \r\n    }\r\n\r\n    public defaultValidate(args) {\r\n        // we are only validating that there IS ONE value\r\n        return args.item === true || args.item === false;\r\n    }\r\n\r\n\r\n    // this is fired AFTER the item changes, \r\n    // and only if the item changes from THIS control, not from external source\r\n    public _changed(ev: MouseEvent, index) {\r\n\r\n        // fix the active/not active class based on value, \r\n        // note that this is initially set via common.isActive but that only executes once\r\n        // this._dirtyActiveTrigger = !this._dirtyActiveTrigger;\r\n        let args = {\r\n            event: ev,\r\n            item: this.item\r\n        };\r\n        if (this.changing) { this.changing(args); }\r\n\r\n        this.taskQueue.queueMicroTask(() => {\r\n            if (this.change) { this.change(); }\r\n        });\r\n        return true;\r\n    }\r\n\r\n    public detached() {\r\n        ElementUtil.detached(this.common, this.formName, this.required, this._clear, this._myValidator);\r\n    }\r\n\r\n}\r\n","import { Common } from \"../common\";\r\nimport ElementUtil from \"./common/element-util\";\r\nimport {autoinject, bindable, bindingMode, customElement, ObserverLocator, TaskQueue} from \"aurelia-framework\";\r\n\r\n/*\r\n* This is a checkbox list\r\n*/\r\n\r\n@customElement(\"ce-checkboxlist\")\r\n@autoinject()\r\nexport class CECheckboxList {\r\n    public common: Common;\r\n    public taskQueue: TaskQueue;\r\n    public observerLocator: ObserverLocator;\r\n\r\n\r\n    /** @param */\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public type: string = \"\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public items: Array<any>;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public selectedItems: Array<any>;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public displayAttribute: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public valueAttribute: string;\r\n\r\n    // default options for all elements, must be set here, because base class cant declare bindables\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public disabled: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public label: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public pre: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public instructions: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public placeholder: string = \"\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public warningMsg: string = \"Warning\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public isWarning: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public required: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public errorMsg: string = \"Value required\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public isValid: boolean = true;\r\n\r\n    @bindable public formName: string = \"default\";\r\n    @bindable public changing: Function;\r\n    @bindable public change: Function;\r\n    @bindable public validate: Function;\r\n\r\n    private _emptyValue: any = [];\r\n    private _charLimitForStacked: Number = 42;\r\n    private _charLimitForStackedLongText: Number = 120;\r\n    private _isStackedClass: boolean = false;\r\n    private _isStackedLongText: boolean = false;\r\n\r\n    private _areObjects: boolean = false;\r\n    private _activeMap: boolean[];\r\n    private _arrayObserver: any;\r\n    private _validate: Function;\r\n    private _formGroup: HTMLElement; // element ref\r\n    private _clear: Function; // set in inheritor\r\n    private _myValidator: Function; // set in inheritor\r\n\r\n    constructor(observerLocator: ObserverLocator, common: Common, taskQueue: TaskQueue) {\r\n        this.common = common;\r\n        this.taskQueue = taskQueue;\r\n        this.observerLocator = observerLocator;\r\n\r\n        this._validate = this.defaultValidate;\r\n        // clear is called by the \r\n        this._clear = (onlyClearValidation: boolean) => {\r\n            this.isValid = true;\r\n            if (!onlyClearValidation) {\r\n                this.selectedItems.splice(0, this.selectedItems.length);\r\n                this._activeMap = ElementUtil.activeMap(this.items, this.selectedItems);\r\n                this.updateSelection();\r\n            }\r\n        };\r\n        this._myValidator = () => {\r\n                if (this.required && ElementUtil.isVisible(this._formGroup)) {\r\n                    this.isValid =  this._validate({ items: this.selectedItems });\r\n                }\r\n                return this.isValid; };\r\n    }\r\n\r\n    public attached() {\r\n        this.isValid = true;\r\n        if (this.validate) { this._validate = this.validate; }\r\n        ElementUtil.attached(this.common, this.formName, this.required, this._clear, this._myValidator);\r\n\r\n        if (this.selectedItems) {\r\n            this.selectedItemsChanged(this.selectedItems, null);\r\n        }\r\n    }\r\n\r\n    public itemsChanged(newValue: any, oldValue: any) {\r\n        this._areObjects = ElementUtil.areObjects(this.items);\r\n        //ElementUtil.checkMaxChars(this.items, this._areObjects, this.displayAttribute);\r\n        if (newValue != null && this.selectedItems != null && this.selectedItems.length) {\r\n                // get current object from selected display attribute;\r\n                this._activeMap = ElementUtil.activeMap(this.items, this.selectedItems);\r\n                this.updateSelection();\r\n        }\r\n    }\r\n\r\n    public defaultValidate(args) {\r\n        // we are only validating that there IS ONE value\r\n        return args.items != null && args.items.length > 0;\r\n    }\r\n\r\n    public selectedItemsChanged(newValue: any, oldValue: any) {\r\n        // fired when array actually changes, this means the ARRAY WAS REPLACED\r\n        // We need to resubscribe.\r\n        this._arrayObserver = this.observerLocator.getArrayObserver(this.selectedItems).subscribe(() => this.selectedItemsHasChanged());\r\n        this.selectedItemsHasChanged();\r\n    }\r\n\r\n    public selectedItemsHasChanged() {\r\n        // we dont want to validate stuff before stuff is loaded        \r\n        this.remapActiveMap();\r\n\r\n        if (this.required && ElementUtil.isVisible(this._formGroup) ) { // && this._selectedItems != this.selectedItems ) {\r\n            this.isValid = this._validate({ items: this.selectedItems });\r\n        }\r\n    }\r\n    public updateSelection() {\r\n        this.taskQueue.queueTask(() => {\r\n            if (this._formGroup) {\r\n                let elems = Array.from(this._formGroup.getElementsByClassName(\"btn\"));\r\n                ElementUtil.setActiveFromActiveMap(elems, this._activeMap);\r\n            }\r\n        });\r\n    }\r\n    // this is fired AFTER the item changes, \r\n    // and only if the item changes from THIS control, not from external source\r\n    public _changed(ev: MouseEvent, index) {\r\n\r\n        // fix the active/not active class based on value, \r\n        // note that this is initially set via common.isActive but that only executes once\r\n        // this._dirtyActiveTrigger = !this._dirtyActiveTrigger;\r\n        this.remapActiveMap();\r\n        let args = {\r\n            event: ev,\r\n            items: this.selectedItems,\r\n            index: index,\r\n        };\r\n        if (this.changing) { this.changing(args); }\r\n\r\n        this.taskQueue.queueMicroTask(() => {\r\n            if (this.change) { this.change(); }\r\n        });\r\n        return true;\r\n    }\r\n\r\n    public detached() {\r\n        ElementUtil.detached(this.common, this.formName, this.required, this._clear, this._myValidator);\r\n    }\r\n\r\n    // wtf is this you might ask.\r\n    // see you may have an array, and that array may changed\r\n    // that array might have other things bound to it...\r\n    // this will ensure to rebind the active variable when the selectedItems array is modified\r\n    private remapActiveMap() {\r\n        let newMap: boolean[] = [];\r\n        this.items.forEach((obj) => {\r\n            let val = false;\r\n            this.selectedItems.forEach((s) => {\r\n                if (!val) {\r\n                    if (this._areObjects ) {\r\n                        // DO NOT CHANGE THESE TO ===   \"1\" != 1\r\n                        if (this.valueAttribute && s == obj[this.valueAttribute]) { val = true; }\r\n                        else if (!val && s == obj) { val = true; }\r\n                    }\r\n                    else if (s === obj) {\r\n                        val = true;\r\n                    }\r\n                }\r\n            });\r\n            newMap.push(val);\r\n        });\r\n        this._activeMap = newMap;\r\n    }\r\n}\r\n","import { autoinject, bindable, bindingMode, customElement, TaskQueue} from \"aurelia-framework\";\r\nimport * as _ from \"lodash\";\r\nimport * as moment from \"moment\";\r\nimport { Common } from \"../common\";\r\nimport ElementUtil from \"./common/element-util\";\r\n\r\nimport \"pickadate\";\r\nimport \"pickadate/date\";\r\n\r\n@customElement(\"ce-datepicker\")\r\n@autoinject()\r\nexport class CEDatepicker {\r\n    public common: Common;\r\n    public taskQueue: TaskQueue;\r\n\r\n     /** datepicker options */\r\n    public _options: Pickadate.DateOptions;\r\n\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public date: any;\r\n    @bindable public iconPlacement: string = \"post\"; // or \"pre\"\r\n    @bindable public btnClass: string = \"btn-secondary\"; // or btn-primary\r\n\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public disabled: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public label: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public pre: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public instructions: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public placeholder: string = \"Select Date\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public warningMsg: string = \"Warning\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public isWarning: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public required: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public errorMsg: string = \"Value required\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public isValid: boolean = true;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public isOverrideInvalid: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public options: any = {};\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public showInlineHelp: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public showInlineHelpLink: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public inlineHelpMsg: string = \"Bind Help Text HERE\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public inlineHelpMsgAfterLink: string = \".\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public inlineHelpLinkText: string = \"More\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public inlineHelpLink: string = \"http://www.google.com\";\r\n    \r\n    @bindable public formName: string = \"default\";\r\n    @bindable public changing: Function;\r\n    @bindable public change: Function; // call via change.call=\"functionName\"\r\n    @bindable public validate: Function;\r\n\r\n    /** _date Internal date field */\r\n    private _date: Date;\r\n\r\n    private datevalue: string;\r\n    private _datevalue: string;\r\n\r\n    private _dp: any;\r\n    private _input: Element;\r\n\r\n    private _validate: Function;\r\n    private _formGroup: any; // element ref\r\n    private _clear: Function; // set in inheritor\r\n    private _myValidator: Function; // set in inheritor\r\n    private _emptyValue: any = null;  // will be null if objects, \"\" if string\r\n    private _isOpen: boolean = false;\r\n\r\n    constructor(common: Common, taskQueue: TaskQueue) {\r\n        this.common = common;\r\n        this.taskQueue = taskQueue;\r\n\r\n        this._validate = this.defaultValidate;\r\n\r\n        this._options = {};\r\n        this._options.format = \"mm/dd/yyyy\";\r\n        this._options.editable = !this.common.mobilecheck();\r\n        this._options.selectMonths = true;\r\n        this._options.selectYears = 80;\r\n        this._options.editable = true;\r\n        // this._options.containerHidden = \"#dtpickerdialog\";\r\n        this._options.container = \"#dtpickerdialog\";\r\n        //this._options.max = new Date();\r\n\r\n        this._clear = (onlyClearValidation: boolean) => {\r\n            this.isValid = true;\r\n            if (!onlyClearValidation) {\r\n                this.date = this._emptyValue;\r\n                this._datevalue = '';\r\n             }\r\n        };\r\n        this._myValidator = () => {\r\n            if (this.required && ElementUtil.isVisible(this._formGroup)) {\r\n                this.isValid =  this._validate({ date: this.date }); }\r\n            return this.isValid; };\r\n    }\r\n\r\n    public attached() {\r\n        this.isValid = true;\r\n        if (this.validate) { this._validate = this.validate; }\r\n        ElementUtil.attached(this.common, this.formName, this.required, this._clear, this._myValidator);\r\n\r\n        for(var p in this.options){\r\n            this._options[p] = this.options[p];\r\n        }\r\n        // initialize pickadate\r\n        if(this._input) {\r\n            let _dp = jQuery(this._input).pickadate(this._options);\r\n            this._dp = _dp.pickadate(\"picker\");\r\n            this._dp.on(\"set\", (arg: any) => { this.dp_set(arg); } );\r\n            this._dp.on(\"open\", (arg: any) => { this.dp_open(); } );\r\n            this._dp.on(\"close\", (arg: any) => { this.dp_closed(); } );\r\n\r\n            // the dateChanged may be fired before attached, therefore we need to set the datepicker here if it was already set\r\n            if (this.date) {\r\n                this._dp.set(\"select\", this.date);\r\n            }\r\n        }\r\n        else{\r\n            this.taskQueue.queueMicroTask(() => {\r\n                let _dp = jQuery(this._input).pickadate(this._options);\r\n                this._dp = _dp.pickadate(\"picker\");\r\n                this._dp.on(\"set\", (arg: any) => { this.dp_set(arg); } );\r\n                this._dp.on(\"open\", (arg: any) => { this.dp_open(); } );\r\n                this._dp.on(\"close\", (arg: any) => { this.dp_closed(); } );\r\n    \r\n                // the dateChanged may be fired before attached, therefore we need to set the datepicker here if it was already set\r\n                if (this.date) {\r\n                    this._dp.set(\"select\", this.date);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    public show() { // For show button only\r\n        this._dp.open();\r\n    }\r\n\r\n    /**\r\n     * Callback when the datepicker is opened\r\n     */\r\n    public dp_open() {\r\n        this._isOpen = true;\r\n    }\r\n\r\n    /**\r\n     * Callback when the datepicker is opened\r\n     */\r\n    public dp_closed() {\r\n        this._isOpen = false;\r\n    }\r\n\r\n    /**\r\n     * Callback when the datepicker is set\r\n     * @param arg {select: date = Date.valueOf or clear: null }\r\n     */\r\n    public dp_set(arg: any) {\r\n        // console.log(arg);\r\n        // arg.select = date\r\n        // arg.clear = null\r\n\r\n        if (arg.clear) {\r\n            this._date = null;\r\n            if (this.date != null) {\r\n                this.date = this._date;\r\n\r\n                if (this.required && ElementUtil.isVisible(this._formGroup)) {\r\n                    this.isValid = this._validate({ date: this.date });\r\n                }\r\n                if (this.changing) { this.changing({date: this.date}); }\r\n\r\n                this.taskQueue.queueMicroTask(() => {\r\n                    if (this.change) { this.change(); }\r\n                });\r\n            }\r\n        }\r\n        else if (arg.select) {\r\n            this._date = moment(arg.select).toDate();\r\n            if (this.date == null || this.date.valueOf() !== this._date.valueOf()) {\r\n                this.date = this._date;\r\n\r\n                if (this.required && ElementUtil.isVisible(this._formGroup)) {\r\n                    this.isValid = this._validate({ date: this.date });\r\n                }\r\n                if (this.changing) { this.changing({date: this.date}); }\r\n\r\n                this.taskQueue.queueMicroTask(() => {\r\n                    if (this.change) { this.change(); }\r\n                });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    // this is fired before the date changes,\r\n    // and if the date is changed externally or internally.\r\n    public dateChanged(newValue: any, oldValue: any) {\r\n\r\n        if (this.date == null && this._date != null) {\r\n            if (this._dp) {\r\n                this._dp.clear();\r\n            }\r\n        }\r\n        else if(this.date != null && this.date.constructor != Date) {\r\n            console.log(\"Critical Data Error: Trying to set Date to string.\")\r\n        }\r\n        else if (this.date != null && this._date == null\r\n                 || (this.date != null && this._date != null\r\n                 && this.date.valueOf() !== this._date.valueOf())) {\r\n            if (this._dp) {\r\n                this._dp.set(\"select\", this.date);\r\n            }\r\n            if (this.required && ElementUtil.isVisible(this._formGroup)) {\r\n                this.isValid = this._validate({ date: this.date });\r\n            }\r\n        }\r\n        else if (this.date == null) {\r\n            this._datevalue = '';\r\n        }\r\n\r\n    }\r\n\r\n    // this is fired AFTER the date changes,\r\n    // and only if the date changes from THIS control, not from external source\r\n    public _changed(ev, index) {\r\n        if (this.changing) { this.changing({\r\n            date: this.date,\r\n            event: ev});\r\n        }\r\n\r\n        this.taskQueue.queueMicroTask(() => {\r\n            if (this.change) { this.change(); }\r\n        });\r\n        if (this.required && ElementUtil.isVisible(this._formGroup)) {\r\n            this.isValid = this._validate({ date: this.date });\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public defaultValidate(args): boolean {\r\n        // we are only validating that there is an date, and it is longer than \"\"\r\n        return args.date != null && args.date !== \"\";\r\n    }\r\n\r\n    public detached() {\r\n        ElementUtil.detached(this.common, this.formName, this.required, this._clear, this._myValidator);\r\n    }\r\n    public _blurFunc(ev) {\r\n        // Set Changed on Blur\r\n        if (this._datevalue !== this.datevalue) {\r\n            this.datevalue = this._datevalue;\r\n            const m = moment(this._datevalue, \"MM-DD-YYYY\");\r\n            if (m !== null && m.isValid()) {\r\n                this._date = m.toDate();\r\n                this._dp.set(\"select\", m.toDate());\r\n            }\r\n        }\r\n        if (!this._datevalue && !ev.target.value) {\r\n            this._clear();\r\n        }\r\n        // if (this.required && ElementUtil.isVisible(this._formGroup)) {\r\n        //     this.isValid = this._validate({ date: this.date });\r\n        // }\r\n    }\r\n}\r\n","import { autoinject, bindable, bindingMode, customElement, TaskQueue } from \"aurelia-framework\";\r\nimport * as _ from \"lodash\";\r\nimport { Common } from \"../common\";\r\nimport ElementUtil from \"./common/element-util\";\r\n\r\n/**\r\n * This is a dropdown\r\n */\r\n@customElement(\"ce-dropdown\")\r\n@autoinject()\r\nexport class DropDown {\r\n    public common: Common;\r\n    public taskQueue: TaskQueue;\r\n\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public type: string = \"radiolist\";\r\n\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public item: any;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public items: any;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public displayAttribute: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public valueAttribute: string; // set this if the user wants a string\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public disabledAttribute: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public visibleAttribute: string;\r\n    \r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public disabled: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public label: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public pre: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public instructions: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public placeholder: string = \"\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public warningMsg: string = \"Warning\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public infoMsg: string = \"\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public isWarning: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public required: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public errorMsg: string = \"Value required\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public isValid: boolean = true;\r\n\r\n    @bindable public formName: string = \"default\";\r\n    @bindable public isRadio: boolean = false;\r\n    @bindable public changing: Function;\r\n    @bindable public change: Function; // call via change.call=\"functionName\"\r\n    @bindable public validate: Function;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public isOverrideInvalid: boolean = false;\r\n\r\n    private _input: Element;\r\n\r\n    private _activeMap: boolean[];\r\n    private _item: any = null;\r\n    private _areObjects: boolean = false;\r\n    private _element: Element;\r\n    private _validate: Function;\r\n    private _formGroup: HTMLElement; // element ref\r\n    private _clear: Function; // set in inheritor\r\n    private _myValidator: Function; // set in inheritor\r\n    private _emptyValue: any = null;  // will be null if objects, \"\" if string\r\n\r\n    constructor(common: Common, taskQueue: TaskQueue) {\r\n        this.common = common;\r\n        this.taskQueue = taskQueue;\r\n\r\n        this._validate = this.defaultValidate;\r\n        // clear is called by hte\r\n        this._clear = (onlyClearValidation: boolean) => {\r\n            this.isValid = true;\r\n            if (!onlyClearValidation) {\r\n                this._item = this._emptyValue;\r\n                this.item = this._emptyValue;\r\n                this._activeMap = ElementUtil.activeMap(this.items, this._item);\r\n                this.updateSelection();\r\n            }\r\n        }\r\n        this._myValidator = () => {\r\n            if (this.required && ElementUtil.isVisible(this._formGroup)) {\r\n                this.isValid = this._validate({ item: this.item });\r\n            }\r\n            return this.isValid;\r\n        };\r\n    }\r\n\r\n    public attached() {\r\n        this.isValid = true;\r\n        if (this.validate) { this._validate = this.validate; }\r\n        ElementUtil.attached(this.common, this.formName, this.required, this._clear, this._myValidator);\r\n\r\n        if (this.item != null) {\r\n            this.itemChanged(this.item, null);\r\n        }\r\n    }\r\n\r\n    public itemsChanged(newValue: any, oldValue: any) {\r\n        this._areObjects = ElementUtil.areObjects(this.items);\r\n\r\n        // if (newValue != null) {\r\n        //     this.itemChanged(this.item, null);\r\n        //         // get current object from selected display attribute;\r\n        // }\r\n        if (newValue != null && this.item != null) {\r\n            // get current object from selected display attribute;\r\n            this._activeMap = ElementUtil.activeMap(this.items, this._item);\r\n            this.updateSelection();\r\n        }\r\n    }\r\n\r\n    // this is fired before the item changes,\r\n    // if the item is changed externally.\r\n    public itemChanged(newValue: any, oldValue: any) {\r\n\r\n        if (!this.items) {\r\n            // we don't know if the item is an object or not yet....\r\n            return;\r\n        }\r\n\r\n        let wasChanged = false;\r\n        // if areStrings\r\n        if (!this._areObjects) {\r\n            if (this._item !== newValue) {\r\n                this._item = newValue;\r\n                wasChanged = true;\r\n            }\r\n        }\r\n        // if objects\r\n        else if (this._areObjects) {\r\n            if (newValue == null || newValue === \"\") {\r\n                if (this._item != null) {\r\n                    this._item = null;\r\n                    wasChanged = true;\r\n                }\r\n            }\r\n            else {\r\n                // Keep in mind that there may or may not be a valueAttribute, we could be selecting objects instead of a prop of an object.\r\n                let selected = null;\r\n                // Handle Strings and Numbers\r\n                if (newValue.constructor === String || newValue.constructor === Number) {\r\n                    // find by property because we're selecting an prop out of the object\r\n                    selected = this.findItemByAttribute(newValue, this.valueAttribute);\r\n                    if (!_.isEqual(selected, this._item)) {\r\n                        this._item = selected;\r\n                        wasChanged = true;\r\n                    }\r\n                }\r\n                // Handle Objects (if there is no valueAttribute)\r\n                else {\r\n                    if (!_.isEqual(newValue, this._item)) {\r\n                        this._item = newValue;\r\n                        wasChanged = true;\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        if (wasChanged) {\r\n            this._activeMap = ElementUtil.activeMap(this.items, this._item);\r\n            this.updateSelection();\r\n        }\r\n\r\n        if (this.required && ElementUtil.isVisible(this._formGroup)) {\r\n            this.isValid = this._validate({ item: this.item });  // todo: wrong place\r\n        }\r\n    }\r\n\r\n    public updateSelection() {\r\n        this.taskQueue.queueTask(() => {\r\n            if (this._formGroup) {\r\n                if (this.type === \"dropdown\") {\r\n                    let elems = Array.from(this._formGroup.getElementsByTagName(\"option\"));\r\n                    ElementUtil.setOptionFromActiveMap(elems, this._activeMap);\r\n                }\r\n                else {\r\n                    ElementUtil.removeAllActiveChildren(this._formGroup);\r\n                    let elems = Array.from(this._formGroup.getElementsByClassName(\"btn\"));\r\n                    ElementUtil.setActiveFromActiveMap(elems, this._activeMap);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public _itemChanged() {\r\n        let wasChanged = false;\r\n\r\n        // if areStrings\r\n        if (!this._areObjects) {\r\n            if (this.item !== this._item) {\r\n                this.item = this._item;\r\n                wasChanged = true;\r\n            }\r\n        }\r\n        // if objects\r\n        if (this._areObjects) {\r\n            // if there is a valueAttribute, then this.item needs to be a string\r\n            if (this.valueAttribute) {\r\n                if (this.item !== this._item[this.valueAttribute]) {\r\n                    this.item = this._item[this.valueAttribute];\r\n                    wasChanged = true;\r\n                }\r\n            }\r\n            // if there is not a valueAttribute, then this.item needs to be an OBJECT\r\n            if (!this.valueAttribute) {\r\n                if (this.item !== this._item) {\r\n                    this.item = this._item;\r\n                    wasChanged = true;\r\n                }\r\n            }\r\n        }\r\n        if (wasChanged) {\r\n            this._activeMap = ElementUtil.activeMap(this.items, this._item);\r\n            this.updateSelection();\r\n        }\r\n    }\r\n\r\n    public defaultValidate(args): boolean {\r\n        // we are only validating that there IS a value\r\n        // remember this may be an object or a string\r\n        return args.item !== \"\" && args.item != null;\r\n    }\r\n\r\n    public findItemByAttribute(attrValue: any, prop: string) {\r\n        let selected: any = null;\r\n\r\n        if (attrValue.constructor !== String\r\n            && attrValue.constructor !== Number) {\r\n            attrValue = attrValue[prop];\r\n        }\r\n\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            if (this.items[i][prop] === attrValue && selected == null) {\r\n                selected = this.items[i];\r\n            }\r\n        }\r\n        return selected;\r\n    }\r\n\r\n    // this is fired before item changes.\r\n    // and only if the item changes from THIS control, not from external source\r\n    public _changed(ev: MouseEvent, index) {\r\n        this._itemChanged();\r\n\r\n        if (this.changing) { this.changing({\r\n            event: ev,\r\n            item: this.item,\r\n            index: index\r\n        }); }\r\n        // Todo, use this everywhere.\r\n        // this will call change after the values of bindables are updated\r\n        this.taskQueue.queueMicroTask(() => {\r\n            if (this.change) { this.change(); }\r\n        });\r\n        ElementUtil.removeAllActiveChildren(this._formGroup);\r\n        (<HTMLElement>ev.target).parentElement.classList.add(\"active\");\r\n        return true;\r\n    }\r\n\r\n    public detached() {\r\n        ElementUtil.detached(this.common, this.formName, this.required, this._clear, this._myValidator);\r\n    }\r\n\r\n}\r\n","import { Common } from \"../common\";\r\nimport ElementUtil from \"./common/element-util\";\r\nimport {autoinject, bindable, bindingMode, customElement, ObserverLocator, TaskQueue} from \"aurelia-framework\";\r\n\r\n/*\r\n* This is a checkbox list\r\n*/\r\n\r\n@customElement(\"ce-duelingpicklist\")\r\n@autoinject()\r\nexport class CEDuelingpicklist {\r\n    public common: Common;\r\n    public taskQueue: TaskQueue;\r\n    public observerLocator: ObserverLocator;\r\n\r\n\r\n    /** @param */\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public type: string = \"\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public items: Array<any>;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public selectedItems: Array<any>;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public displayAttribute: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public valueAttribute: string;\r\n\r\n    // default options for all elements, must be set here, because base class cant declare bindables\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public disabled: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public label: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public pre: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public instructions: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public placeholder: string = \"\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public warningMsg: string = \"Warning\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public isWarning: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public required: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public errorMsg: string = \"Value required\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public isValid: boolean = true;\r\n\r\n    @bindable public formName: string = \"default\";\r\n    @bindable public changing: Function;\r\n    @bindable public change: Function;\r\n    @bindable public validate: Function;\r\n\r\n    private _emptyValue: any = [];\r\n    private _charLimitForStacked: Number = 42;\r\n    private _charLimitForStackedLongText: Number = 120;\r\n    private _isStackedClass: boolean = false;\r\n    private _isStackedLongText: boolean = false;\r\n\r\n    private _areObjects: boolean = false;\r\n    private _activeMap: boolean[];\r\n    private _arrayObserver: any;\r\n    private _validate: Function;\r\n    private _formGroup: HTMLElement; // element ref\r\n    private _clear: Function; // set in inheritor\r\n    private _myValidator: Function; // set in inheritor\r\n\r\n    constructor(observerLocator: ObserverLocator, common: Common, taskQueue: TaskQueue) {\r\n        this.common = common;\r\n        this.taskQueue = taskQueue;\r\n        this.observerLocator = observerLocator;\r\n\r\n        this._validate = this.defaultValidate;\r\n        // clear is called by the \r\n        this._clear = (onlyClearValidation: boolean) => {\r\n            this.isValid = true;\r\n            if (!onlyClearValidation) {\r\n                this.selectedItems.splice(0, this.selectedItems.length);\r\n                this._activeMap = ElementUtil.activeMap(this.items, this.selectedItems);\r\n                this.updateSelection();\r\n            }\r\n        };\r\n        this._myValidator = () => {\r\n                if (this.required && ElementUtil.isVisible(this._formGroup)) {\r\n                    this.isValid =  this._validate({ items: this.selectedItems });\r\n                }\r\n                return this.isValid; };\r\n    }\r\n\r\n    public attached() {\r\n        this.isValid = true;\r\n        if (this.validate) { this._validate = this.validate; }\r\n        ElementUtil.attached(this.common, this.formName, this.required, this._clear, this._myValidator);\r\n\r\n        if (this.selectedItems) {\r\n            this.selectedItemsChanged(this.selectedItems, null);\r\n        }\r\n    }\r\n\r\n    public itemsChanged(newValue: any, oldValue: any) {\r\n        this._areObjects = ElementUtil.areObjects(this.items);\r\n        //ElementUtil.checkMaxChars(this.items, this._areObjects, this.displayAttribute);\r\n        if (newValue != null && this.selectedItems != null && this.selectedItems.length) {\r\n                // get current object from selected display attribute;\r\n                this._activeMap = ElementUtil.activeMap(this.items, this.selectedItems);\r\n                this.updateSelection();\r\n        }\r\n    }\r\n\r\n    public defaultValidate(args) {\r\n        // we are only validating that there IS ONE value\r\n        return args.items != null && args.items.length > 0;\r\n    }\r\n\r\n    public selectedItemsChanged(newValue: any, oldValue: any) {\r\n        // fired when array actually changes, this means the ARRAY WAS REPLACED\r\n        // We need to resubscribe.\r\n        this._arrayObserver = this.observerLocator.getArrayObserver(this.selectedItems).subscribe(() => this.selectedItemsHasChanged());\r\n        this.selectedItemsHasChanged();\r\n    }\r\n\r\n    public selectedItemsHasChanged() {\r\n        // we dont want to validate stuff before stuff is loaded        \r\n        this.remapActiveMap();\r\n\r\n        if (this.required && ElementUtil.isVisible(this._formGroup) ) { // && this._selectedItems != this.selectedItems ) {\r\n            this.isValid = this._validate({ items: this.selectedItems });\r\n        }\r\n    }\r\n    public updateSelection() {\r\n        this.taskQueue.queueTask(() => {\r\n            if (this._formGroup) {\r\n                let elems = Array.from(this._formGroup.getElementsByClassName(\"btn\"));\r\n                ElementUtil.setActiveFromActiveMap(elems, this._activeMap);\r\n            }\r\n        });\r\n    }\r\n    // this is fired AFTER the item changes, \r\n    // and only if the item changes from THIS control, not from external source\r\n    public _changed(ev: MouseEvent, index) {\r\n\r\n        // fix the active/not active class based on value, \r\n        // note that this is initially set via common.isActive but that only executes once\r\n        // this._dirtyActiveTrigger = !this._dirtyActiveTrigger;\r\n        this.remapActiveMap();\r\n        let args = {\r\n            event: ev,\r\n            items: this.selectedItems,\r\n            index: index,\r\n        };\r\n        if (this.changing) { this.changing(args); }\r\n\r\n        this.taskQueue.queueMicroTask(() => {\r\n            if (this.change) { this.change(); }\r\n        });\r\n        return true;\r\n    }\r\n\r\n    public detached() {\r\n        ElementUtil.detached(this.common, this.formName, this.required, this._clear, this._myValidator);\r\n    }\r\n\r\n    // wtf is this you might ask.\r\n    // see you may have an array, and that array may changed\r\n    // that array might have other things bound to it...\r\n    // this will ensure to rebind the active variable when the selectedItems array is modified\r\n    private remapActiveMap() {\r\n        let newMap: boolean[] = [];\r\n        this.items.forEach((obj) => {\r\n            let val = false;\r\n            this.selectedItems.forEach((s) => {\r\n                if (!val) {\r\n                    if (this._areObjects ) {\r\n                        // DO NOT CHANGE THESE TO ===   \"1\" != 1\r\n                        if (this.valueAttribute && s == obj[this.valueAttribute]) { val = true; }\r\n                        else if (!val && s == obj) { val = true; }\r\n                    }\r\n                    else if (s === obj) {\r\n                        val = true;\r\n                    }\r\n                }\r\n            });\r\n            newMap.push(val);\r\n        });\r\n        this._activeMap = newMap;\r\n    }\r\n}\r\n","import { autoinject, bindable, bindingMode, customElement, TaskQueue} from \"aurelia-framework\";\r\nimport * as _ from \"lodash\";\r\nimport { Common } from \"../common\";\r\nimport ElementUtil from \"./common/element-util\";\r\n\r\n@customElement(\"ce-input\")\r\n@autoinject()\r\nexport class Text {\r\n    public common: Common;\r\n    public taskQueue: TaskQueue;\r\n\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public item: any;\r\n    @bindable public isNumber: boolean = false;\r\n    @bindable public isPositive: boolean = true;\r\n    @bindable public isLong: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public disabled: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public label: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public pre: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public instructions: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public placeholder: string = \"\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public warningMsg: string = \"Warning\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public isWarning: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public required: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public errorMsg: string = \"Value required\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public showError: boolean = true;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public isValid: boolean = true;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public isOverrideInvalid: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public showInlineHelp: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public showInlineHelpLink: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public inlineHelpMsg: string = \"Bind Help Text HERE\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public inlineHelpMsgAfterLink: string = \".\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public inlineHelpLinkText: string = \"More\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public inlineHelpLink: string = \"http://www.google.com\";\r\n\r\n\r\n    @bindable public formName: string = \"default\";\r\n    @bindable public changing: Function;\r\n    @bindable public change: Function; // call via change.call=\"functionName\"\r\n    @bindable public validate: Function;\r\n\r\n    private _input: Element;\r\n\r\n    private _element: Element;\r\n    private _validate: Function;\r\n    private _formGroup: any; // element ref\r\n    private _programaticErrorMessage: string = \"Error When Binding Input.\";\r\n    private _clear: Function; // set in inheritor\r\n    private _myValidator: Function; // set in inheritor\r\n    private _emptyValue: any = null;  // will be null if objects, \"\" if string\r\n\r\n    constructor(common: Common, taskQueue: TaskQueue) {\r\n        this.common = common;\r\n        this.taskQueue = taskQueue;\r\n\r\n        this._validate = this.defaultValidate;\r\n        // clear is called by hte\r\n        this._clear = (onlyClearValidation: boolean) => {\r\n            this.isValid = true;\r\n            if (!onlyClearValidation) {\r\n                this.item = this._emptyValue;\r\n             }\r\n        };\r\n        this._myValidator = () => {\r\n                if (this.required && ElementUtil.isVisible(this._formGroup)) {\r\n                this.isValid =  this._validate({ item: this.item }); }\r\n                return this.isValid; };\r\n    }\r\n\r\n    public attached() {\r\n        this.isValid = true;\r\n        if (this.validate) { this._validate = this.validate; }\r\n        ElementUtil.attached(this.common, this.formName, this.required, this._clear, this._myValidator);\r\n    }\r\n\r\n    // this is fired before the item changes,\r\n    // and if the item is changed externally or internally.\r\n    public itemChanged(newValue: any, oldValue: any) {\r\n        if (this.required && ElementUtil.isVisible(this._formGroup) && newValue !== oldValue) {\r\n            this.isValid = this._validate({ item: this.item });\r\n        }\r\n    }\r\n\r\n    // this is fired AFTER the item changes,\r\n    // and only if the item changes from THIS control, not from external source\r\n    public _changed(ev, index) {\r\n        if (this.isNumber && this.isPositive\r\n            && this.item != null && this.item !== \"\" && this.item.indexOf(\"-\") >= 0) {\r\n            this.item = this.item.replace(\"-\", \"\");\r\n        }\r\n\r\n        if (this.changing) { this.changing({\r\n            event: ev,\r\n            item: this.item,\r\n        }); }\r\n\r\n        this.taskQueue.queueMicroTask(() => {\r\n            if (this.change) { this.change(); }\r\n        });\r\n        return true;\r\n    }\r\n\r\n    public defaultValidate(args): boolean {\r\n        // we are only validating that there is an item, and it is longer than \"\"\r\n        return args.item != null && args.item !== \"\";\r\n    }\r\n\r\n    public detached() {\r\n        ElementUtil.detached(this.common, this.formName, this.required, this._clear, this._myValidator);\r\n    }\r\n}\r\n","import { autoinject, bindable, bindingMode, customElement, TaskQueue} from \"aurelia-framework\";\r\nimport * as _ from \"lodash\";\r\nimport { Common } from \"../common\";\r\nimport ElementUtil from \"./common/element-util\";\r\n\r\n@customElement(\"ce-modal\")\r\n@autoinject()\r\nexport class Modal {\r\n    public common: Common;\r\n\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public item: any;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public headerText: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public instructions: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public buttonText: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public altButtonText: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public icon: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public blnIsErrorModal: boolean = false;\r\n\r\n    @bindable public callback: Function;\r\n    @bindable public altCallback: Function;\r\n    \r\n    constructor(common: Common) {\r\n        this.common = common;\r\n    }\r\n\r\n    _callback() {\r\n        if(this.callback) { this.callback(); }\r\n    }\r\n    _altCallback() {\r\n        if(this.altCallback) { this.altCallback(); }\r\n    }\r\n}","import { autoinject, bindable, bindingMode, customElement, TaskQueue} from \"aurelia-framework\";\r\nimport * as _ from \"lodash\";\r\nimport { Common } from \"../common\";\r\nimport ElementUtil from \"./common/element-util\";\r\n\r\n@customElement(\"ce-money\")\r\n@autoinject()\r\nexport class CEMoney {\r\n    public common: Common;\r\n    public taskQueue: TaskQueue;\r\n\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public item: any;\r\n    @bindable public isPositive: boolean = true;\r\n    @bindable public iconPlacement: string = \"pre\"; // or \"post\"\r\n    @bindable public iconClass: string = \"fa-usd\";\r\n    @bindable public btnClass: string = \"btn-secondary\"; // or btn-primary\r\n\r\n\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public disabled: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public label: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public pre: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public instructions: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public placeholder: string = \"\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public warningMsg: string = \"Warning\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public isWarning: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public required: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public errorMsg: string = \"Value required\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public isValid: boolean = true;\r\n\r\n    @bindable public formName: string = \"default\";\r\n    @bindable public changing: Function;\r\n    @bindable public change: Function; // call via change.call=\"functionName\"\r\n    @bindable public validate: Function;\r\n\r\n    private _input: HTMLElement;\r\n\r\n    private _element: Element;\r\n    private _validate: Function;\r\n    private _formGroup: any; // element ref\r\n    private _programaticErrorMessage: string = \"Error When Binding Input.\";\r\n    private _clear: Function; // set in inheritor\r\n    private _myValidator: Function; // set in inheritor\r\n    private _emptyValue: any = null;  // will be null if objects, \"\" if string\r\n\r\n    constructor(common: Common, taskQueue: TaskQueue) {\r\n        this.common = common;\r\n        this.taskQueue = taskQueue;\r\n\r\n        this._validate = this.defaultValidate;\r\n        // clear is called by hte\r\n        this._clear = (onlyClearValidation: boolean) => {\r\n            this.isValid = true;\r\n            if (!onlyClearValidation) {\r\n                this.item = this._emptyValue;\r\n             }\r\n        }\r\n        this._myValidator = () => {\r\n                if (this.required && ElementUtil.isVisible(this._formGroup)) {\r\n                this.isValid =  this._validate({ item: this.item }); };\r\n                return this.isValid; };\r\n    }\r\n\r\n    public attached() {\r\n        this.isValid = true;\r\n        if (this.validate) { this._validate = this.validate; }\r\n        ElementUtil.attached(this.common, this.formName, this.required, this._clear, this._myValidator);\r\n    }\r\n\r\n    // this is fired before the item changes,\r\n    // and if the item is changed externally or internally.\r\n    public itemChanged(newValue: any, oldValue: any) {\r\n        if (this.required && ElementUtil.isVisible(this._formGroup) && newValue !== oldValue) {\r\n            this.isValid = this._validate({ item: this.item });\r\n        }\r\n    }\r\n\r\n    // this is fired AFTER the item changes,\r\n    // and only if the item changes from THIS control, not from external source\r\n    public _changed(ev, index) {\r\n        if (this.isPositive\r\n            && this.item != null && this.item !== \"\" && this.item.indexOf(\"-\") >= 0){\r\n            this.item = this.item.replace(\"-\", \"\");\r\n        }\r\n\r\n        if (this.changing) { this.changing({\r\n            event: ev,\r\n            item: this.item,\r\n        }); }\r\n\r\n        this.taskQueue.queueMicroTask(() => {\r\n            if (this.change) { this.change(); }\r\n        });\r\n        return true;\r\n    }\r\n\r\n    public defaultValidate(args): boolean {\r\n        // we are only validating that there is an item, and it is longer than \"\"\r\n        return args.item != null && args.item !== \"\";\r\n    }\r\n\r\n    public detached() {\r\n        ElementUtil.detached(this.common, this.formName, this.required, this._clear, this._myValidator);\r\n    }\r\n    public focus() { // on button click\r\n        this._input.focus();\r\n    }\r\n}\r\n","import { Common } from \"../common\";\r\nimport ElementUtil from \"./common/element-util\";\r\nimport {autoinject, bindable, bindingMode, customElement, ObserverLocator, TaskQueue} from \"aurelia-framework\";\r\n\r\n/*\r\n* This is a checkbox list\r\n*/\r\n\r\n@customElement(\"ce-multiselect\")\r\n@autoinject()\r\nexport class CEMultiselect {\r\n    public common: Common;\r\n    public taskQueue: TaskQueue;\r\n    public observerLocator: ObserverLocator;\r\n\r\n\r\n    /** @param */\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public type: string = \"\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public items: Array<any>;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public selectedItems: Array<any>;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public displayAttribute: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public valueAttribute: string;\r\n\r\n    // default options for all elements, must be set here, because base class cant declare bindables\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public disabled: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public label: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public pre: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public instructions: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public placeholder: string = \"\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public warningMsg: string = \"Warning\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public isWarning: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public required: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public errorMsg: string = \"Value required\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public isValid: boolean = true;\r\n\r\n    @bindable public formName: string = \"default\";\r\n    @bindable public changing: Function;\r\n    @bindable public change: Function;\r\n    @bindable public validate: Function;\r\n\r\n    private _emptyValue: any = [];\r\n    private _charLimitForStacked: Number = 42;\r\n    private _charLimitForStackedLongText: Number = 120;\r\n    private _isStackedClass: boolean = false;\r\n    private _isStackedLongText: boolean = false;\r\n\r\n    private _areObjects: boolean = false;\r\n    private _activeMap: boolean[];\r\n    private _arrayObserver: any;\r\n    private _validate: Function;\r\n    private _formGroup: HTMLElement; // element ref\r\n    private _clear: Function; // set in inheritor\r\n    private _myValidator: Function; // set in inheritor\r\n\r\n    constructor(observerLocator: ObserverLocator, common: Common, taskQueue: TaskQueue) {\r\n        this.common = common;\r\n        this.taskQueue = taskQueue;\r\n        this.observerLocator = observerLocator;\r\n\r\n        this._validate = this.defaultValidate;\r\n        // clear is called by the \r\n        this._clear = (onlyClearValidation: boolean) => {\r\n            this.isValid = true;\r\n            if (!onlyClearValidation) {\r\n                this.selectedItems.splice(0, this.selectedItems.length);\r\n                this._activeMap = ElementUtil.activeMap(this.items, this.selectedItems);\r\n                this.updateSelection();\r\n            }\r\n        };\r\n        this._myValidator = () => {\r\n                if (this.required && ElementUtil.isVisible(this._formGroup)) {\r\n                    this.isValid =  this._validate({ items: this.selectedItems });\r\n                }\r\n                return this.isValid; };\r\n    }\r\n\r\n    public attached() {\r\n        this.isValid = true;\r\n        if (this.validate) { this._validate = this.validate; }\r\n        ElementUtil.attached(this.common, this.formName, this.required, this._clear, this._myValidator);\r\n\r\n        if (this.selectedItems) {\r\n            this.selectedItemsChanged(this.selectedItems, null);\r\n        }\r\n    }\r\n\r\n    public itemsChanged(newValue: any, oldValue: any) {\r\n        this._areObjects = ElementUtil.areObjects(this.items);\r\n        //ElementUtil.checkMaxChars(this.items, this._areObjects, this.displayAttribute);\r\n        if (newValue != null && this.selectedItems != null && this.selectedItems.length) {\r\n                // get current object from selected display attribute;\r\n                this._activeMap = ElementUtil.activeMap(this.items, this.selectedItems);\r\n                this.updateSelection();\r\n        }\r\n    }\r\n\r\n    public defaultValidate(args) {\r\n        // we are only validating that there IS ONE value\r\n        return args.items != null && args.items.length > 0;\r\n    }\r\n\r\n    public selectedItemsChanged(newValue: any, oldValue: any) {\r\n        // fired when array actually changes, this means the ARRAY WAS REPLACED\r\n        // We need to resubscribe.\r\n        this._arrayObserver = this.observerLocator.getArrayObserver(this.selectedItems).subscribe(() => this.selectedItemsHasChanged());\r\n        this.selectedItemsHasChanged();\r\n    }\r\n\r\n    public selectedItemsHasChanged() {\r\n        // we dont want to validate stuff before stuff is loaded        \r\n        this.remapActiveMap();\r\n\r\n        if (this.required && ElementUtil.isVisible(this._formGroup) ) { // && this._selectedItems != this.selectedItems ) {\r\n            this.isValid = this._validate({ items: this.selectedItems });\r\n        }\r\n    }\r\n    public updateSelection() {\r\n        this.taskQueue.queueTask(() => {\r\n            if (this._formGroup) {\r\n                let elems = Array.from(this._formGroup.getElementsByClassName(\"btn\"));\r\n                ElementUtil.setActiveFromActiveMap(elems, this._activeMap);\r\n            }\r\n        });\r\n    }\r\n    // this is fired AFTER the item changes, \r\n    // and only if the item changes from THIS control, not from external source\r\n    public _changed(ev: MouseEvent, index) {\r\n\r\n        // fix the active/not active class based on value, \r\n        // note that this is initially set via common.isActive but that only executes once\r\n        // this._dirtyActiveTrigger = !this._dirtyActiveTrigger;\r\n        this.remapActiveMap();\r\n        let args = {\r\n            event: ev,\r\n            items: this.selectedItems,\r\n            index: index,\r\n        };\r\n        if (this.changing) { this.changing(args); }\r\n\r\n        this.taskQueue.queueMicroTask(() => {\r\n            if (this.change) { this.change(); }\r\n        });\r\n        return true;\r\n    }\r\n\r\n    public detached() {\r\n        ElementUtil.detached(this.common, this.formName, this.required, this._clear, this._myValidator);\r\n    }\r\n\r\n    // wtf is this you might ask.\r\n    // see you may have an array, and that array may changed\r\n    // that array might have other things bound to it...\r\n    // this will ensure to rebind the active variable when the selectedItems array is modified\r\n    private remapActiveMap() {\r\n        let newMap: boolean[] = [];\r\n        this.items.forEach((obj) => {\r\n            let val = false;\r\n            this.selectedItems.forEach((s) => {\r\n                if (!val) {\r\n                    if (this._areObjects ) {\r\n                        // DO NOT CHANGE THESE TO ===   \"1\" != 1\r\n                        if (this.valueAttribute && s == obj[this.valueAttribute]) { val = true; }\r\n                        else if (!val && s == obj) { val = true; }\r\n                    }\r\n                    else if (s === obj) {\r\n                        val = true;\r\n                    }\r\n                }\r\n            });\r\n            newMap.push(val);\r\n        });\r\n        this._activeMap = newMap;\r\n    }\r\n}\r\n","import { autoinject, bindable, bindingMode, customElement, TaskQueue} from \"aurelia-framework\";\r\nimport * as _ from \"lodash\";\r\nimport { Common } from \"../common\";\r\nimport ElementUtil from \"./common/element-util\";\r\n/*\r\n* This is a Phone input.\r\n*/\r\n@customElement(\"ce-phone\")\r\n@autoinject()\r\nexport class Text {\r\n    public common: Common;\r\n    public taskQueue: TaskQueue;\r\n\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public item: any;\r\n    @bindable public isNumber: boolean = false;\r\n    @bindable public isPositive: boolean = true;\r\n    @bindable public isLong: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public disabled: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public label: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public pre: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public instructions: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public placeholder: string = \"\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public warningMsg: string = \"Warning\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public isWarning: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public required: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public errorMsg: string = \"Value required\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public invalidMsg: string = \"Invalid Phone format\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public showError: boolean = true;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public isValid: boolean = true;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public isOverrideInvalid: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public maxlength: string = \"12\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public minlength: number = 12;\r\n\r\n    @bindable public formName: string = \"default\";\r\n    @bindable public changing: Function;\r\n    @bindable public change: Function; // call via change.call=\"functionName\"\r\n    @bindable public validate: Function;\r\n\r\n    private _input: Element;\r\n\r\n    private _element: HTMLElement;\r\n    private _validate: Function;\r\n    private _formGroup: any; // element ref\r\n    private _programaticErrorMessage: string = \"Error When Binding Input.\";\r\n    private _clear: Function; // set in inheritor\r\n    private _myValidator: Function; // set in inheritor\r\n    private _emptyValue: any = null;  // will be null if objects, \"\" if string\r\n\r\n    constructor(common: Common, taskQueue: TaskQueue) {\r\n        this.common = common;\r\n        this.taskQueue = taskQueue;\r\n\r\n        this._validate = this.defaultValidate;\r\n        // clear is called by hte\r\n        this._clear = (onlyClearValidation: boolean) => {\r\n            this.isValid = true;\r\n            if (!onlyClearValidation) {\r\n                this.item = this._emptyValue;\r\n             }\r\n        };\r\n        this._myValidator = () => {\r\n                if (this.required && ElementUtil.isVisible(this._formGroup)) {\r\n                this.isValid =  this._validate({ item: this.item }); }\r\n                return this.isValid; };\r\n    }\r\n\r\n    public attached() {\r\n        this.isValid = true;\r\n        if (this.validate) { this._validate = this.validate; }\r\n        ElementUtil.attached(this.common, this.formName, this.required, this._clear, this._myValidator);\r\n    }\r\n\r\n    // this is fired before the item changes,\r\n    // and if the item is changed externally or internally.\r\n    public itemChanged(newValue: any, oldValue: any) {\r\n        if (this.required && ElementUtil.isVisible(this._formGroup) && newValue !== oldValue) {\r\n            this.isValid = this._validate({ item: this.item });\r\n        }\r\n    }\r\n\r\n    // this is fired AFTER the item changes,\r\n    // and only if the item changes from THIS control, not from external source\r\n    public _changed(ev, index) {\r\n        if (this.isNumber && this.isPositive\r\n            && this.item != null && this.item !== \"\" && this.item.indexOf(\"-\") >= 0) {\r\n            this.item = this.item.replace(\"-\", \"\");\r\n        }\r\n\r\n        if (this.changing) { this.changing({\r\n            event: ev,\r\n            item: this.item,\r\n        }); }\r\n        this.taskQueue.queueMicroTask(() => {\r\n            if (this.change) { this.change(); }\r\n        });\r\n        return true;\r\n    }\r\n\r\n    public defaultValidate(args): boolean {\r\n        // we are only validating that there is an item, and it is longer than \"\"\r\n        if(this.required){\r\n            return args.item != null && args.item != \"\" && args.item.length == this.minlength;\r\n        } else {\r\n            return ((args.item == null || args.item == \"\") || (args.item.length == this.minlength));\r\n        }\r\n    }\r\n    keyupFunc(e) {\r\n        // Allow: backspace, delete, tab, escape, enter and .\r\n        if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||\r\n             // Allow: Ctrl+A, Command+A\r\n            (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) ||\r\n             // Allow: home, end, left, right, down, up\r\n            (e.keyCode >= 35 && e.keyCode <= 40)) {\r\n                 // let it happen, don't do anything\r\n                 return;\r\n        }\r\n        // Ensure that it is a number and stop the keypress\r\n        if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {\r\n            e.preventDefault();\r\n        }\r\n        //Format Phone Number\r\n        this.formatPhone();\r\n    }\r\n    onblurFunc(e) {\r\n        this.isValid = this._validate({ item: this.item });\r\n    }\r\n    public formatPhone() {\r\n        if(this.item){\r\n            let val: string = this.item.replace(/\\D/g, '');\r\n            let newVal: string = '';\r\n            if(val.length > 4) {\r\n            this.item = val;\r\n            }\r\n            if((val.length > 3) && (val.length < 7)) {\r\n            newVal += val.substr(0, 3) + '-';\r\n            val = val.substr(3);\r\n            }\r\n            if (val.length > 6) {\r\n            newVal += val.substr(0, 3) + '-';\r\n            newVal += val.substr(3, 3) + '-';\r\n            val = val.substr(6);\r\n            }\r\n            newVal += val;\r\n            this.item = newVal.substring(0, 12);\r\n        }\r\n    }\r\n    public detached() {\r\n        ElementUtil.detached(this.common, this.formName, this.required, this._clear, this._myValidator);\r\n    }\r\n}\r\n","import { autoinject, bindable, bindingMode, customElement, TaskQueue } from \"aurelia-framework\";\r\nimport { Common } from \"../common\";\r\nimport ElementUtil from \"./common/element-util\";\r\nimport * as _ from \"lodash\";\r\n\r\n/**\r\n * This is a radio list\r\n*/\r\n@customElement(\"ce-radiogroup\")\r\n@autoinject()\r\nexport class RadioGroup {\r\n    public common: Common;\r\n    public taskQueue: TaskQueue;\r\n\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public type: string = \"radiolist\";\r\n\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public item: any;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public items: any;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public displayAttribute: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public valueAttribute: string; // set this if the user wants a string\r\n\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public disabled: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public label: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public pre: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public instructions: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public placeholder: string = \"\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public warningMsg: string = \"Warning\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public isWarning: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public required: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public errorMsg: string = \"Value required\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public isValid: boolean = true;\r\n\r\n    @bindable public formName: string = \"default\";\r\n    @bindable public isRadio: boolean = false;\r\n    @bindable public changing: Function;\r\n    @bindable public change: Function; // call via change.call=\"functionName\"\r\n    @bindable public validate: Function;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public isOverrideInvalid: boolean = false;\r\n\r\n    private _input: Element;\r\n\r\n    private _id: string;\r\n    private _isStackedClass: boolean = false;\r\n    private _isStackedLongText: boolean = false;\r\n    private _activeMap: boolean[];\r\n    private _item: any = null;\r\n    private _areObjects: boolean = false;\r\n    private _element: Element;\r\n    private _validate: Function;\r\n    private _formGroup: HTMLElement; // element ref\r\n    private _clear: Function; // set in inheritor\r\n    private _myValidator: Function; // set in inheritor\r\n    private _emptyValue: any = null;  // will be null if objects, \"\" if string\r\n\r\n    constructor(common: Common, taskQueue: TaskQueue) {\r\n        this.common = common;\r\n        this.taskQueue = taskQueue;\r\n        this._id = this.common.getID();\r\n\r\n        this._validate = this.defaultValidate;\r\n        // clear is called by hte\r\n        this._clear = (onlyClearValidation: boolean) => {\r\n            this.isValid = true;\r\n            if (!onlyClearValidation) {\r\n                this._item = this._emptyValue;\r\n                this.item = this._emptyValue;\r\n                this._activeMap = ElementUtil.activeMap(this.items, this._item);\r\n                this.updateSelection();\r\n            }\r\n        }\r\n        this._myValidator = () => {\r\n            if (this.required && ElementUtil.isVisible(this._formGroup)) {\r\n                this.isValid = this._validate({ item: this.item });\r\n            }\r\n            return this.isValid;\r\n        };\r\n    }\r\n\r\n    public attached() {\r\n        this.isValid = true;\r\n        if (this.validate) { this._validate = this.validate; }\r\n        ElementUtil.attached(this.common, this.formName, this.required, this._clear, this._myValidator);\r\n\r\n        if (this.item != null) {\r\n            this.itemChanged(this.item, null);\r\n        }\r\n    }\r\n\r\n    public itemsChanged(newValue: any, oldValue: any) {\r\n        this._areObjects = ElementUtil.areObjects(this.items);\r\n        // this.taskQueue.queueTask(() => {\r\n        //     ElementUtil.checkMaxChars(this.items, this._areObjects, this.displayAttribute);\r\n        // });\r\n        // if (newValue != null) {\r\n        //     this.itemChanged(this.item, null);\r\n        //         // get current object from selected display attribute;\r\n        // }\r\n        if (newValue != null && this.item != null) {\r\n            // get current object from selected display attribute;\r\n            this._activeMap = ElementUtil.activeMap(this.items, this._item);\r\n            this.updateSelection();\r\n        }\r\n    }\r\n\r\n    // this is fired before the item changes,\r\n    // if the item is changed externally.\r\n    public itemChanged(newValue: any, oldValue: any) {\r\n\r\n        if (!this.items) {\r\n            // we don't know if the item is an object or not yet....\r\n            return;\r\n        }\r\n\r\n        let wasChanged = false;\r\n        // if areStrings\r\n        if (!this._areObjects) {\r\n            if (this._item !== newValue) {\r\n                this._item = newValue;\r\n                wasChanged = true;\r\n            }\r\n        }\r\n        // if objects\r\n        else if (this._areObjects) {\r\n            if (newValue == null || newValue === \"\") {\r\n                if (this._item != null) {\r\n                    this._item = null;\r\n                    wasChanged = true;\r\n                }\r\n            }\r\n            else {\r\n                // Keep in mind that there may or may not be a valueAttribute, we could be selecting objects instead of a prop of an object.\r\n                let selected = null;\r\n                // Handle Strings and Numbers\r\n                if (newValue.constructor === String || newValue.constructor === Number) {\r\n                    // find by property because we're selecting an prop out of the object\r\n                    selected = this.findItemByAttribute(newValue, this.valueAttribute);\r\n                    if (!_.isEqual(selected, this._item)) {\r\n                        this._item = selected;\r\n                        wasChanged = true;\r\n                    }\r\n                }\r\n                // Handle Objects (if there is no valueAttribute)\r\n                else {\r\n                    if (!_.isEqual(newValue, this._item)) {\r\n                        this._item = newValue;\r\n                        wasChanged = true;\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        if (wasChanged) {\r\n            this._activeMap = ElementUtil.activeMap(this.items, this._item);\r\n            this.updateSelection();\r\n        }\r\n\r\n        if (this.required && ElementUtil.isVisible(this._formGroup)) {\r\n            this.isValid = this._validate({ item: this.item });  // todo: wrong place\r\n        }\r\n    }\r\n\r\n    public updateSelection() {\r\n        this.taskQueue.queueTask(() => {\r\n            if (this._formGroup) {\r\n                if (this.type === \"dropdown\") {\r\n                    let elems = Array.from(this._formGroup.getElementsByTagName(\"option\"));\r\n                    ElementUtil.setOptionFromActiveMap(elems, this._activeMap);\r\n                }\r\n                else {\r\n                    ElementUtil.removeAllActiveChildren(this._formGroup);\r\n                    let elems = Array.from(this._formGroup.getElementsByClassName(\"btn\"));\r\n                    ElementUtil.setActiveFromActiveMap(elems, this._activeMap);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public _itemChanged() {\r\n        let wasChanged = false;\r\n\r\n        // if areStrings\r\n        if (!this._areObjects) {\r\n            if (this.item !== this._item) {\r\n                this.item = this._item;\r\n                wasChanged = true;\r\n            }\r\n        }\r\n        // if objects\r\n        if (this._areObjects) {\r\n            // if there is a valueAttribute, then this.item needs to be a string\r\n            if (this.valueAttribute) {\r\n                if (this.item !== this._item[this.valueAttribute]) {\r\n                    this.item = this._item[this.valueAttribute];\r\n                    wasChanged = true;\r\n                }\r\n            }\r\n            // if there is not a valueAttribute, then this.item needs to be an OBJECT\r\n            if (!this.valueAttribute) {\r\n                if (this.item !== this._item) {\r\n                    this.item = this._item;\r\n                    wasChanged = true;\r\n                }\r\n            }\r\n        }\r\n        if (wasChanged) {\r\n            this._activeMap = ElementUtil.activeMap(this.items, this._item);\r\n            this.updateSelection();\r\n        }\r\n    }\r\n\r\n    public defaultValidate(args): boolean {\r\n        // we are only validating that there IS a value\r\n        // remember this may be an object or a string\r\n        let valid = args.item !== \"\" && args.item != null;\r\n        return valid;\r\n    }\r\n\r\n\r\n    public findItemByAttribute(attrValue: any, prop: string) {\r\n        let selected: any = null;\r\n\r\n        if (attrValue.constructor !== String\r\n            && attrValue.constructor !== Number) {\r\n            attrValue = attrValue[prop];\r\n        }\r\n\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            if (this.items[i][prop] === attrValue && selected == null) {\r\n                selected = this.items[i];\r\n            }\r\n        }\r\n        return selected;\r\n    }\r\n\r\n    // this is fired before item changes.\r\n    // and only if the item changes from THIS control, not from external source\r\n    public _changed(ev: MouseEvent, index) {\r\n        this._itemChanged();\r\n\r\n        let args = {\r\n            event: ev,\r\n            item: this.item,\r\n            index: index\r\n        };\r\n        if (this.changing) { this.changing(args); }\r\n        // Todo, use this everywhere.\r\n        // this will call change after the values of bindables are updated\r\n        this.taskQueue.queueMicroTask(() => {\r\n            if (this.change) { this.change(); }\r\n        });\r\n        ElementUtil.removeAllActiveChildren(this._formGroup);\r\n        (<HTMLElement>ev.target).parentElement.classList.add(\"active\");\r\n        return true;\r\n    }\r\n\r\n\r\n\r\n    public detached() {\r\n        ElementUtil.detached(this.common, this.formName, this.required, this._clear, this._myValidator);\r\n    }\r\n\r\n}\r\n","import { autoinject, bindable, bindingMode, customElement, TaskQueue } from \"aurelia-framework\";\r\nimport { Common } from \"../common\";\r\nimport ElementUtil from \"./common/element-util\";\r\nimport * as _ from \"lodash\";\r\n\r\n/**\r\n * This is a radio list\r\n*/\r\n@customElement(\"ce-radiolist\")\r\n@autoinject()\r\nexport class RadioList {\r\n    public common: Common;\r\n    public taskQueue: TaskQueue;\r\n\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public type: string = \"radiolist\";\r\n\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public item: any;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public items: any;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public displayAttribute: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public valueAttribute: string; // set this if the user wants a string\r\n\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public disabled: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public label: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public pre: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public instructions: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public placeholder: string = \"\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public warningMsg: string = \"Warning\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public isWarning: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public required: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public errorMsg: string = \"Value required\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public isValid: boolean = true;\r\n\r\n    @bindable public formName: string = \"default\";\r\n    @bindable public isRadio: boolean = false;\r\n    @bindable public changing: Function;\r\n    @bindable public change: Function; // call via change.call=\"functionName\"\r\n    @bindable public validate: Function;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public isOverrideInvalid: boolean = false;\r\n\r\n    private _input: Element;\r\n\r\n    private _isStackedClass: boolean = false;\r\n    private _isStackedLongText: boolean = false;\r\n    private _activeMap: boolean[];\r\n    private _item: any = null;\r\n    private _areObjects: boolean = false;\r\n    private _element: Element;\r\n    private _validate: Function;\r\n    private _formGroup: HTMLElement; // element ref\r\n    private _clear: Function; // set in inheritor\r\n    private _myValidator: Function; // set in inheritor\r\n    private _emptyValue: any = null;  // will be null if objects, \"\" if string\r\n\r\n    constructor(common: Common, taskQueue: TaskQueue) {\r\n        this.common = common;\r\n        this.taskQueue = taskQueue;\r\n\r\n        this._validate = this.defaultValidate;\r\n        // clear is called by hte\r\n        this._clear = (onlyClearValidation: boolean) => {\r\n            this.isValid = true;\r\n            if (!onlyClearValidation) {\r\n                this._item = this._emptyValue;\r\n                this.item = this._emptyValue;\r\n                this._activeMap = ElementUtil.activeMap(this.items, this._item);\r\n                this.updateSelection();\r\n            }\r\n        }\r\n        this._myValidator = () => {\r\n            if (this.required && ElementUtil.isVisible(this._formGroup)) {\r\n                this.isValid = this._validate({ item: this.item });\r\n            }\r\n            return this.isValid;\r\n        };\r\n    }\r\n\r\n    public attached() {\r\n        this.isValid = true;\r\n        if (this.validate) { this._validate = this.validate; }\r\n        ElementUtil.attached(this.common, this.formName, this.required, this._clear, this._myValidator);\r\n\r\n        if (this.item != null) {\r\n            this.itemChanged(this.item, null);\r\n        }\r\n    }\r\n\r\n    public itemsChanged(newValue: any, oldValue: any) {\r\n        this._areObjects = ElementUtil.areObjects(this.items);\r\n        // this.taskQueue.queueTask(() => {\r\n        //     ElementUtil.checkMaxChars(this.items, this._areObjects, this.displayAttribute);\r\n        // });\r\n        // if (newValue != null) {\r\n        //     this.itemChanged(this.item, null);\r\n        //         // get current object from selected display attribute;\r\n        // }\r\n        if (newValue != null && this.item != null) {\r\n            // get current object from selected display attribute;\r\n            this._activeMap = ElementUtil.activeMap(this.items, this._item);\r\n            this.updateSelection();\r\n        }\r\n    }\r\n\r\n    // this is fired before the item changes,\r\n    // if the item is changed externally.\r\n    public itemChanged(newValue: any, oldValue: any) {\r\n\r\n        if (!this.items) {\r\n            // we don't know if the item is an object or not yet....\r\n            return;\r\n        }\r\n\r\n        let wasChanged = false;\r\n        // if areStrings\r\n        if (!this._areObjects) {\r\n            if (this._item !== newValue) {\r\n                this._item = newValue;\r\n                wasChanged = true;\r\n            }\r\n        }\r\n        // if objects\r\n        else if (this._areObjects) {\r\n            if (newValue == null || newValue === \"\") {\r\n                if (this._item != null) {\r\n                    this._item = null;\r\n                    wasChanged = true;\r\n                }\r\n            }\r\n            else {\r\n                // Keep in mind that there may or may not be a valueAttribute, we could be selecting objects instead of a prop of an object.\r\n                let selected = null;\r\n                // Handle Strings and Numbers\r\n                if (newValue.constructor === String || newValue.constructor === Number) {\r\n                    // find by property because we're selecting an prop out of the object\r\n                    selected = this.findItemByAttribute(newValue, this.valueAttribute);\r\n                    if (!_.isEqual(selected, this._item)) {\r\n                        this._item = selected;\r\n                        wasChanged = true;\r\n                    }\r\n                }\r\n                // Handle Objects (if there is no valueAttribute)\r\n                else {\r\n                    if (!_.isEqual(newValue, this._item)) {\r\n                        this._item = newValue;\r\n                        wasChanged = true;\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        if (wasChanged) {\r\n            this._activeMap = ElementUtil.activeMap(this.items, this._item);\r\n            this.updateSelection();\r\n        }\r\n\r\n        if (this.required && ElementUtil.isVisible(this._formGroup)) {\r\n            this.isValid = this._validate({ item: this.item });  // todo: wrong place\r\n        }\r\n    }\r\n\r\n    public updateSelection() {\r\n        this.taskQueue.queueTask(() => {\r\n            if (this._formGroup) {\r\n                if (this.type === \"dropdown\") {\r\n                    let elems = Array.from(this._formGroup.getElementsByTagName(\"option\"));\r\n                    ElementUtil.setOptionFromActiveMap(elems, this._activeMap);\r\n                }\r\n                else {\r\n                    ElementUtil.removeAllActiveChildren(this._formGroup);\r\n                    let elems = Array.from(this._formGroup.getElementsByClassName(\"btn\"));\r\n                    ElementUtil.setActiveFromActiveMap(elems, this._activeMap);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public _itemChanged() {\r\n        let wasChanged = false;\r\n\r\n        // if areStrings\r\n        if (!this._areObjects) {\r\n            if (this.item !== this._item) {\r\n                this.item = this._item;\r\n                wasChanged = true;\r\n            }\r\n        }\r\n        // if objects\r\n        if (this._areObjects) {\r\n            // if there is a valueAttribute, then this.item needs to be a string\r\n            if (this.valueAttribute) {\r\n                if (this.item !== this._item[this.valueAttribute]) {\r\n                    this.item = this._item[this.valueAttribute];\r\n                    wasChanged = true;\r\n                }\r\n            }\r\n            // if there is not a valueAttribute, then this.item needs to be an OBJECT\r\n            if (!this.valueAttribute) {\r\n                if (this.item !== this._item) {\r\n                    this.item = this._item;\r\n                    wasChanged = true;\r\n                }\r\n            }\r\n        }\r\n        if (wasChanged) {\r\n            this._activeMap = ElementUtil.activeMap(this.items, this._item);\r\n            this.updateSelection();\r\n        }\r\n    }\r\n\r\n    public defaultValidate(args): boolean {\r\n        // we are only validating that there IS a value\r\n        // remember this may be an object or a string\r\n        let valid = args.item !== \"\" && args.item != null;\r\n        return valid;\r\n    }\r\n\r\n\r\n    public findItemByAttribute(attrValue: any, prop: string) {\r\n        let selected: any = null;\r\n\r\n        if (attrValue.constructor !== String\r\n            && attrValue.constructor !== Number) {\r\n            attrValue = attrValue[prop];\r\n        }\r\n\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            if (this.items[i][prop] === attrValue && selected == null) {\r\n                selected = this.items[i];\r\n            }\r\n        }\r\n        return selected;\r\n    }\r\n\r\n    // this is fired before item changes.\r\n    // and only if the item changes from THIS control, not from external source\r\n    public _changed(ev: MouseEvent, index) {\r\n        this._itemChanged();\r\n\r\n        let args = {\r\n            event: ev,\r\n            item: this.item,\r\n            index: index\r\n        };\r\n        if (this.changing) { this.changing(args); }\r\n        // Todo, use this everywhere.\r\n        // this will call change after the values of bindables are updated\r\n        this.taskQueue.queueMicroTask(() => {\r\n            if (this.change) { this.change(); }\r\n        });\r\n        ElementUtil.removeAllActiveChildren(this._formGroup);\r\n        (<HTMLElement>ev.target).parentElement.classList.add(\"active\");\r\n        return true;\r\n    }\r\n\r\n\r\n\r\n    public detached() {\r\n        ElementUtil.detached(this.common, this.formName, this.required, this._clear, this._myValidator);\r\n    }\r\n\r\n}\r\n","import { autoinject, bindable, bindingMode, customElement, TaskQueue} from \"aurelia-framework\";\r\nimport * as _ from \"lodash\";\r\nimport { Common } from \"../common\";\r\nimport ElementUtil from \"./common/element-util\";\r\n/*\r\n* This is a SSN input.\r\n*/\r\n@customElement(\"ce-ssn\")\r\n@autoinject()\r\nexport class Text {\r\n    public common: Common;\r\n    public taskQueue: TaskQueue;\r\n\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public item: any;\r\n    @bindable public isNumber: boolean = false;\r\n    @bindable public isPositive: boolean = true;\r\n    @bindable public isLong: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public disabled: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public label: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public pre: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public instructions: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public placeholder: string = \"\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public warningMsg: string = \"Warning\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public isWarning: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public required: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public errorMsg: string = \"Value required\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public invalidMsg: string = \"Invalid SSN format\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public showError: boolean = true;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public isValid: boolean = true;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public isOverrideInvalid: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public maxlength: string = \"11\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public minlength: number = 11;\r\n\r\n    @bindable public formName: string = \"default\";\r\n    @bindable public changing: Function;\r\n    @bindable public change: Function; // call via change.call=\"functionName\"\r\n    @bindable public validate: Function;\r\n\r\n    private _input: Element;\r\n\r\n    private _element: HTMLElement;\r\n    private _validate: Function;\r\n    private _formGroup: any; // element ref\r\n    private _programaticErrorMessage: string = \"Error When Binding Input.\";\r\n    private _clear: Function; // set in inheritor\r\n    private _myValidator: Function; // set in inheritor\r\n    private _emptyValue: any = null;  // will be null if objects, \"\" if string\r\n\r\n    constructor(common: Common, taskQueue: TaskQueue) {\r\n        this.common = common;\r\n        this.taskQueue = taskQueue;\r\n\r\n        this._validate = this.defaultValidate;\r\n        // clear is called by hte\r\n        this._clear = (onlyClearValidation: boolean) => {\r\n            this.isValid = true;\r\n            if (!onlyClearValidation) {\r\n                this.item = this._emptyValue;\r\n             }\r\n        };\r\n        this._myValidator = () => {\r\n                if (this.required && ElementUtil.isVisible(this._formGroup)) {\r\n                this.isValid =  this._validate({ item: this.item }); }\r\n                return this.isValid; };\r\n    }\r\n\r\n    public attached() {\r\n        this.isValid = true;\r\n        if (this.validate) { this._validate = this.validate; }\r\n        ElementUtil.attached(this.common, this.formName, this.required, this._clear, this._myValidator);\r\n    }\r\n\r\n    // this is fired before the item changes,\r\n    // and if the item is changed externally or internally.\r\n    public itemChanged(newValue: any, oldValue: any) {\r\n        if (this.required && ElementUtil.isVisible(this._formGroup) && newValue !== oldValue) {\r\n            this.isValid = this._validate({ item: this.item });\r\n        }\r\n    }\r\n\r\n    // this is fired AFTER the item changes,\r\n    // and only if the item changes from THIS control, not from external source\r\n    public _changed(ev, index) {\r\n        if (this.isNumber && this.isPositive\r\n            && this.item != null && this.item !== \"\" && this.item.indexOf(\"-\") >= 0) {\r\n            this.item = this.item.replace(\"-\", \"\");\r\n        }\r\n\r\n        if (this.changing) { this.changing({\r\n            event: ev,\r\n            item: this.item,\r\n        }); }\r\n        this.taskQueue.queueMicroTask(() => {\r\n            if (this.change) { this.change(); }\r\n        });\r\n        return true;\r\n    }\r\n\r\n    public defaultValidate(args): boolean {\r\n        // we are only validating that there is an item, and it is longer than \"\"\r\n        if(this.required){\r\n            return args.item != null && args.item != \"\" && args.item.length == this.minlength;\r\n        } else {\r\n            return ((args.item == null || args.item == \"\") || (args.item.length == this.minlength));\r\n        }\r\n    }\r\n    keyupFunc(e) {\r\n        // Allow: backspace, delete, tab, escape, enter and .\r\n        if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||\r\n             // Allow: Ctrl+A, Command+A\r\n            (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) ||\r\n             // Allow: home, end, left, right, down, up\r\n            (e.keyCode >= 35 && e.keyCode <= 40)) {\r\n                 // let it happen, don't do anything\r\n                 return;\r\n        }\r\n        // Ensure that it is a number and stop the keypress\r\n        if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {\r\n            e.preventDefault();\r\n        }\r\n        //Format SSN Number\r\n        this.formatSSN();\r\n    }\r\n    onblurFunc(e) {\r\n        this.isValid = this._validate({ item: this.item });\r\n    }\r\n    public formatSSN() {\r\n        if(this.item) {\r\n            let val: string = this.item.replace(/\\D/g, '');\r\n            let newVal: string = '';\r\n            if(val.length > 4) {\r\n            this.item = val;\r\n            }\r\n            if((val.length > 3) && (val.length < 6)) {\r\n            newVal += val.substr(0, 3) + '-';\r\n            val = val.substr(3);\r\n            }\r\n            if (val.length > 5) {\r\n            newVal += val.substr(0, 3) + '-';\r\n            newVal += val.substr(3, 2) + '-';\r\n            val = val.substr(5);\r\n            }\r\n            newVal += val;\r\n            this.item = newVal.substring(0, 11);\r\n        }\r\n    }\r\n    public detached() {\r\n        ElementUtil.detached(this.common, this.formName, this.required, this._clear, this._myValidator);\r\n    }\r\n}\r\n","import { autoinject, bindable, bindingMode, customElement, TaskQueue} from \"aurelia-framework\";\r\nimport * as _ from \"lodash\";\r\nimport { Common } from \"../common\";\r\nimport ElementUtil from \"./common/element-util\";\r\n\r\n@customElement(\"ce-text\")\r\n@autoinject()\r\nexport class Text {\r\n    public common: Common;\r\n    public taskQueue: TaskQueue;\r\n\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public item: any;\r\n    @bindable public isNumber: boolean = false;\r\n    @bindable public isPositive: boolean = true;\r\n    @bindable public isLong: boolean = false;\r\n    @bindable public isDate: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public disabled: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public label: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public text: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public pre: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public instructions: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public placeholder: string = \"\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public warningMsg: string = \"Warning\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public isWarning: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public required: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public errorMsg: string = \"Value required\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public showError: boolean = true;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public isValid: boolean = true;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public isOverrideInvalid: boolean = false;\r\n\r\n    @bindable public formName: string = \"default\";\r\n    @bindable public changing: Function;\r\n    @bindable public change: Function; // call via change.call=\"functionName\"\r\n    @bindable public validate: Function;\r\n\r\n    private _input: Element;\r\n\r\n    private _element: Element;\r\n    private _validate: Function;\r\n    private _formGroup: any; // element ref\r\n    private _programaticErrorMessage: string = \"Error When Binding Input.\";\r\n    private _clear: Function; // set in inheritor\r\n    private _myValidator: Function; // set in inheritor\r\n    private _emptyValue: any = null;  // will be null if objects, \"\" if string\r\n\r\n    constructor(common: Common, taskQueue: TaskQueue) {\r\n        this.common = common;\r\n        this.taskQueue = taskQueue;\r\n\r\n        this._validate = this.defaultValidate;\r\n        // clear is called by hte\r\n        this._clear = (onlyClearValidation: boolean) => {\r\n            this.isValid = true;\r\n            if (!onlyClearValidation) {\r\n                this.item = this._emptyValue;\r\n             }\r\n        };\r\n        this._myValidator = () => {\r\n                if (this.required && ElementUtil.isVisible(this._formGroup)) {\r\n                this.isValid =  this._validate({ item: this.item }); }\r\n                return this.isValid; };\r\n    }\r\n\r\n    public attached() {\r\n        this.isValid = true;\r\n        if (this.validate) { this._validate = this.validate; }\r\n        if (this.disabled && this.isDate  && typeof this.item.getMonth === 'function') {\r\n          this.item = (this.item.getMonth() + 1) + '/' + this.item.getDate() + '/' +  this.item.getFullYear();\r\n        }\r\n        ElementUtil.attached(this.common, this.formName, this.required, this._clear, this._myValidator);\r\n    }\r\n\r\n    // this is fired before the item changes,\r\n    // and if the item is changed externally or internally.\r\n    public itemChanged(newValue: any, oldValue: any) {\r\n        if (this.required && ElementUtil.isVisible(this._formGroup) && newValue !== oldValue) {\r\n            this.isValid = this._validate({ item: this.item });\r\n        }\r\n    }\r\n\r\n    // this is fired AFTER the item changes,\r\n    // and only if the item changes from THIS control, not from external source\r\n    public _changed(ev, index) {\r\n        if (this.isNumber && this.isPositive\r\n            && this.item != null && this.item !== \"\" && this.item.indexOf(\"-\") >= 0) {\r\n            this.item = this.item.replace(\"-\", \"\");\r\n        }\r\n        if (this.disabled && this.isDate  && typeof this.item.getMonth === 'function') {\r\n          this.item = (this.item.getMonth() + 1) + '/' + this.item.getDate() + '/' +  this.item.getFullYear();\r\n        }\r\n        if (this.changing) { this.changing({\r\n            event: ev,\r\n            item: this.item,\r\n        }); }\r\n\r\n        this.taskQueue.queueMicroTask(() => {\r\n            if (this.change) { this.change(); }\r\n        });\r\n        return true;\r\n    }\r\n\r\n    public defaultValidate(args): boolean {\r\n        // we are only validating that there is an item, and it is longer than \"\"\r\n        return args.item != null && args.item !== \"\";\r\n    }\r\n\r\n    public detached() {\r\n        ElementUtil.detached(this.common, this.formName, this.required, this._clear, this._myValidator);\r\n    }\r\n}\r\n","\r\nimport { autoinject, bindable, bindingMode, customElement, TaskQueue } from \"aurelia-framework\";\r\nimport { Data } from \"../../resources/data\";\r\nimport { Common } from \"../common\";\r\nimport ElementUtil from \"./common/element-util\";\r\n\r\n// import {customElement, bindable, bindingMode, autoinject} from 'aurelia-framework';\r\n// import { BaseElement } from \"./a-base\";\r\n/*\r\n  This is a typeahead.\r\n  What does this element do?\r\n  1.  Provide an input.\r\n  2.  Provide a bindable selected object/string for holding the selected item.\r\n  3.  When a user types, a data set is searched for that search text.   If found, the results will display in a drop down list with matched text highlighted.\r\n  4.  If a user clears the text box, then the selected item should clear.\r\n  TODO: Expand to support a HTTP search\r\n*/\r\n@customElement(\"ce-typeahead\")\r\n@autoinject()\r\nexport class ATypeahead {\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public selection: Function;\r\n\r\n    /** @param selected - will be set to the selected item (object or string) */\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public selected: any;\r\n    /** @param change.delegate - optional callback when item selected */\r\n\r\n    /** @param source - source for the search, should be Array of object or string */\r\n    @bindable public source: Array<any>;\r\n    /** @param selectionProperty - sounce for the input string after selected */\r\n    @bindable public selectionProperty: string;\r\n\r\n    // Other options\r\n    // @bindable public hasOther: string;\r\n    @bindable public hasOther: boolean;\r\n    @bindable public hasOtherText: string = \"Company not found, use this name\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public hasOtherSelected: boolean;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public hasOtherValue: string = null;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public hasOtherLabel: string = null;\r\n\r\n    /**\r\n     * @param filter should return a bool, it is run once per item:\r\n     * function(obj, query) {\r\n     *   if(obj.prop.indexOf(query) > -1 ) return true;\r\n     *   return false;\r\n     * }\r\n     */\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public filter: Function;\r\n\r\n\r\n    /**\r\n     * Select should be an object:\r\n     * { \r\n     * fields: \"Id, Name\"\r\n     * extended: \"(Select SubQuery)\" - optional\r\n     * object: \"Account__c\"\r\n     * searchField: [\"Id\", \"Name\"]\r\n     * limit: 15\r\n     * }\r\n     */\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public select;\r\n    \r\n    \r\n\r\n    /** @param template - takes item obj or string, should return html for dropdown list item */\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public template: Function;\r\n\r\n    @bindable public btnClass: string = \"btn-secondary\"; // or btn-primary\r\n\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public disabled: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public label: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public pre: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public instructions: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public placeholder: string = \"Type to search\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public warningMsg: string = \"Warning\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public isWarning: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public required: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public errorMsg: string = \"This field is required\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public isValid: boolean = true;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public isOverrideInvalid: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public selectedrecordicon: string;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public defaultresults: Array<any> = [];\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public showInlineHelp: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public showInlineHelpLink: boolean = false;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public inlineHelpMsg: string = \"Bind Help Text HERE\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public inlineHelpMsgAfterLink: string = \".\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public inlineHelpLinkText: string = \"More\";\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public inlineHelpLink: string = \"http://www.google.com\";\r\n    \r\n    @bindable public formName: string = \"default\";\r\n    @bindable public changing: Function;\r\n    @bindable public change: Function;\r\n    @bindable public validate: Function;\r\n    @bindable public addNewCallback: Function;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public addingOther: boolean;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) public isVisible: Function;\r\n \r\n    public common: Common;\r\n    public data: Data;\r\n    public taskQueue: TaskQueue;\r\n    private _input: any; // ref\r\n    private _isSelected: boolean = false;\r\n    private _selection: any = null;\r\n    private testList: string[] = [\"you\", \"should\", \"bind\", \"something\", \"to\", \"source\"];\r\n    private isOpen: boolean;\r\n    private query: string = \"\";\r\n    private results: Array<any> = [];\r\n    private _maxResults: number = 5;\r\n    private _validate: Function;\r\n    private _clear: Function;\r\n    private _myValidator: Function;\r\n    private _formGroup: any;\r\n\r\n    constructor(common: Common, taskQueue: TaskQueue, data: Data) {\r\n        this.common = common;\r\n        this.taskQueue = taskQueue;\r\n        this.data = data;\r\n\r\n        this._validate = this.defaultValidate;\r\n        // clear is called by the\r\n        this._clear = (onlyClearValidation: boolean) => {\r\n            if (this.addingOther) { this.addingOther = false; }\r\n            this.isValid = true;\r\n            if (!onlyClearValidation) {\r\n                this.selected = null;\r\n                // this._blockItemChanged = true;\r\n            }\r\n        };\r\n\r\n        this._myValidator = () => {\r\n            if (this.required && ElementUtil.isVisible(this._formGroup)) {\r\n                this.isValid = this._validate({ item: this.selected });\r\n            }\r\n            return this.isValid;\r\n        };\r\n    }\r\n\r\n    public addNew() {\r\n        if (this.addNewCallback) {\r\n            this.addNewCallback();\r\n        }\r\n    }\r\n\r\n    public defaultSelection() {\r\n        let selectionPropertySplit: Array<any> = this.selectionProperty ? this.selectionProperty.split(\".\") : [this.selectionProperty];\r\n        if(selectionPropertySplit.length > 1) {\r\n            return this.selectionProperty ? this.selected[selectionPropertySplit[0]][selectionPropertySplit[1]] : this.parseForString(this.selected);\r\n        } else {\r\n            return this.selectionProperty ? this.selected[this.selectionProperty] : this.parseForString(this.selected);\r\n        }\r\n    }\r\n\r\n    public attached() {\r\n        ElementUtil.attached(this.common, this.formName, this.required, this._clear, this._myValidator);\r\n\r\n        /** On attached, we will have access to the bindabled properties if we are if.bind on the element so it is created and destroyed */\r\n        if (!this.template) {\r\n            this.template = this.defaultTemplate;\r\n        }\r\n\r\n        if (!this.source) {\r\n            this.source = this.testList;\r\n        }\r\n\r\n        if (!this.selection) {\r\n            this.selection = this.defaultSelection;\r\n        }\r\n\r\n        if (this.selected) {\r\n            this.selectedChanged(this.selected, null);\r\n        }\r\n        if (this.hasOtherSelected) {\r\n            this.selectingOther();\r\n        }\r\n    }\r\n\r\n    public defaultValidate(args) {\r\n        // we are only validating that there is an item, and it is longer than \"\"\r\n        return args.item != null;\r\n    }\r\n\r\n    public clearSelection() {\r\n        if (this.addingOther) { this.addingOther = false; }\r\n        this._isSelected = false;\r\n        this._selection = \"\";\r\n        this.selected = null;\r\n        this.clearOther();\r\n        this._changed(\"Cleared\");\r\n    }\r\n\r\n    public clearOther() {\r\n        this.hasOtherSelected = false;\r\n        this.hasOtherValue = null;\r\n    }\r\n\r\n    public _queryChanged(ev) {\r\n        // dude your selection is cleared now.\r\n\r\n        if (this.selected) {\r\n            this.selected = null;\r\n        }\r\n\r\n        if (this.amISearching()) {\r\n            if (this.select) {\r\n                this.queryResults(this.select, this.query);\r\n            }\r\n            else {\r\n                this.queryCallback(this.defaultFilter(this.query));\r\n            }\r\n        } else {\r\n            this.isOpen = false;\r\n            if (this.required && ElementUtil.isVisible(this._formGroup)) {\r\n                this.isValid = this._validate({ item: this.selected });\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Select should be an object:\r\n     * { \r\n     * fields: \"Id, Name\"\r\n     * extended: \"(Select SubQuery)\" - optional\r\n     * object: \"Account__c\"\r\n     * searchField: [\"Id\", \"Name\"]\r\n     * limit: 15\r\n     * }\r\n     */\r\n    public queryResults(select: any, query) {\r\n        //Build query\r\n        let sel: string = \"SELECT \" + select.fields;\r\n        if(select.extended) { sel += \" \" + select.extended; }\r\n        sel += \" FROM \" + select.object;\r\n\r\n        let terms: string[] = query.split(\" \");\r\n        for(let k = 0; k < select.searchField.length; k++) {\r\n            sel += k == 0 ? \" WHERE ((\" : \" OR (\";\r\n\r\n            for(let i = 0; i < terms.length; i++) {\r\n                sel += i == 0 ? \"\" : \" AND \";\r\n                sel += select.searchField[k] + \" LIKE '%\" + terms[i] + \"%'\";\r\n            }\r\n\r\n            sel += k+1 == select.searchField.length ? \"))\" : \")\";\r\n        }\r\n\r\n        if(select.additionalWhere) { sel += select.additionalWhere;  }\r\n\r\n        if(select.limit) { sel += \" LIMIT \" + select.limit; }\r\n\r\n        this.data.sforceQuery(sel)\r\n        .then((result: any) => {\r\n            //Salesforce is fucking brilliant, if this only retrieves 1 record, they don't make it any array.\r\n            if(result.records) {\r\n                if(result.records.length){\r\n                    this.queryCallback(result.records);\r\n                }            \r\n                else { //if not, make it an array... I mean its called recordS?\r\n                    this.queryCallback([result.records]);\r\n                }            \r\n            }\r\n            else{\r\n                this.queryCallback([]);\r\n            }\r\n        }).catch(this.common.errorHandler);\r\n    }\r\n    public selectedChanged(newValue: any, oldValue: any) {\r\n        if (newValue !== oldValue) {\r\n            if (newValue == null) {\r\n                this.clearSelection();\r\n            } else {\r\n                this.query = \"\";  // clear query\r\n                this._isSelected = true;\r\n\r\n                if (this.selection) { this._selection = this.selection(); }\r\n\r\n                if (this.required && ElementUtil.isVisible(this._formGroup)) {\r\n                    this.isValid = this._validate({ item: this.selected });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public _changed(ev) {\r\n        if (this.changing) { this.changing({\r\n            event: ev,\r\n            item: this.selected,\r\n        }); }\r\n        this.taskQueue.queueMicroTask(() => {\r\n            if (this.change) { this.change(); }\r\n        });\r\n    }\r\n\r\n    public queryCallback(res) {\r\n        this.clearArray(this.results); // clear array\r\n        let regEx = new RegExp(\"(\" + this.query + \")(?!([^<]+)?>)\", \"gi\");  // compile once for all the loop.\r\n        for (let i = 0; i < res.length; i++) {\r\n            this.results.push({\r\n                // html: this.highlightVisibleMatches(this.template(res[i], i), regEx),\r\n                html: this.template(res[i], i),\r\n                item: res[i],\r\n            });\r\n        }\r\n\r\n        if (this.hasOther || res.length > 0) {\r\n            this.isOpen = true;\r\n        }\r\n    }\r\n    public show() { // on button click\r\n        this._input.focus();\r\n    }\r\n\r\n    public _focusFunc(ev) {\r\n        if (this.amISearching() && this.results && (this.hasOther || this.results.length > 0)) {\r\n            this.isOpen = true;\r\n        } else if(!this.amISearching() && this.defaultresults && this.defaultresults.length > 0) {\r\n            // Set the default list items to the Bound default available results\r\n            this.queryCallback(this.defaultresults);\r\n        }\r\n    }\r\n\r\n    public _blurFunc(ev) {\r\n        this.isOpen = false;\r\n    }\r\n\r\n    public selectingFunc(ev, res) {\r\n        const areDifferent = (this.selected !== res.item);\r\n        this.selected = res.item;\r\n        // Check if the Selection Property is a level down\r\n        let selectionPropertySplit: Array<any> = this.selectionProperty ? this.selectionProperty.split(\".\") : [this.selectionProperty];\r\n        if(selectionPropertySplit.length > 1) {\r\n            this.query = this.selectionProperty ? this.selected[selectionPropertySplit[0]][selectionPropertySplit[1]] : this.parseForString(res.html);\r\n        } else {\r\n            this.query = this.selectionProperty ? this.selected[this.selectionProperty] : this.parseForString(res.html);\r\n        }\r\n        this._changed(\"Selected\");\r\n        // go ahead and filter to this selection only... because reasons.\r\n        this.queryCallback(this.defaultFilter(this.query));\r\n\r\n        if (this.required && ElementUtil.isVisible(this._formGroup) && areDifferent) {\r\n            this.isValid = this._validate({ item: this.selected });\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public selectingOther() {\r\n        this.addingOther = true;\r\n        if (this.query != \"\") {\r\n            this.hasOtherValue = this.query;\r\n        }\r\n\r\n        this.query = \"\";  // clear query\r\n        this._isSelected = true;\r\n        this.isOpen = false;\r\n        this.hasOtherSelected = true;\r\n    }\r\n\r\n    // default query is just a string match.\r\n    public defaultFilter(query) {\r\n        // while filter might be prettier, we need to limit our matches for speed.\r\n        let res: Array<any> = [];\r\n\r\n        if (this.source) {\r\n            for (let i = 0; i < this.source.length; i++) {\r\n                let obj = this.source[i];\r\n                // if there is a custom filter \r\n                if (this.filter) {\r\n                    if (this.filter(obj, query)) {\r\n                        res.push(obj);\r\n                    }\r\n                } else {\r\n                    // we shall run our own filter\r\n                    if (obj.toLowerCase().indexOf(query.toLowerCase()) > -1) {\r\n                        res.push(obj);\r\n                    }\r\n                }\r\n                if (res.length > this._maxResults) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n\r\n    public highlightVisibleMatches(html, regEx) {\r\n        html = html.replace(regEx, \"<span class=\\\"tt-highlight\\\">$1</span>\");\r\n        return html;\r\n    }\r\n\r\n    // default html for a result.\r\n    public defaultTemplate(data,i) {\r\n        // assuming a list of strings is being searched.\r\n        // return \"<div class=\\\"tt-suggestion tt-selectable\\\"><span class=\\\"tt-content\\\">\" + data + \"</span></div>\";\r\n        return \"<div id=\\\"listbox-option-unique-id-\" + i + \"\\\" class=\\\"slds-media slds-listbox__option slds-listbox__option_entity slds-listbox__option_has-meta\\\" role=\\\"option\\\"><span class=\\\"slds-media__body\\\"><span class=\\\"slds-listbox__option-text slds-listbox__option-text_entity\\\">\" + data.Name + \"</span></span></div>\"\r\n    }\r\n\r\n    public parseForString(html) {\r\n        return html.replace(/<(.*?)>/g, \"\");\r\n    }\r\n\r\n    public amISearching() {\r\n        return this.query.trim().length > 0;\r\n    }\r\n\r\n    // Clears all items from an array\r\n    public clearArray(arr) {\r\n        for (let i = arr.length; i > 0; i--) {\r\n            arr.pop();\r\n        }\r\n    }\r\n\r\n    public detached() {\r\n        this.query = \"\";\r\n        ElementUtil.detached(this.common, this.formName, this.required, this._clear, this._myValidator);\r\n    }\r\n\r\n}\r\n","import * as _ from \"lodash\";\r\nimport { Common } from \"../../common\";\r\n\r\nmodule ElementUtil {\r\n    export function attached(common: Common, formName: string, required: boolean, clear: Function, myValidator: Function): void {\r\n        if (!common.globalInputClearFunctions[formName]) { common.globalInputClearFunctions[formName] = []; }\r\n        common.globalInputClearFunctions[formName].push(clear);\r\n\r\n        if (required) {\r\n            if (!common.globalValidationFunctions[formName]) { common.globalValidationFunctions[formName] = []; }\r\n            common.globalValidationFunctions[formName].push(myValidator);\r\n        }\r\n    }\r\n\r\n    export function detached(common: Common, formName: string, required: boolean, clear: Function, myValidator: Function): void {\r\n        // remove from globalclear\r\n        if (common.globalInputClearFunctions[formName]) {\r\n            for (let i = 0; i < common.globalInputClearFunctions[formName].length; i++) {\r\n                if (common.globalInputClearFunctions[formName][i] === clear) {\r\n                    // console.log('match');\r\n                    common.globalInputClearFunctions[formName].splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n        if (required) { // remove from globalValidation\r\n            if (common.globalValidationFunctions[formName]) {\r\n                for (let i = 0; i < common.globalValidationFunctions[formName].length; i++) {\r\n                    if (common.globalValidationFunctions[formName][i] === myValidator) {\r\n                        // console.log('match');\r\n                        common.globalValidationFunctions[formName].splice(i, 1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    export function isVisible(e: HTMLElement): boolean {\r\n        return e && e.offsetParent != null;\r\n    }\r\n\r\n    class LongTextResult {\r\n        public isStackedClass: boolean = false;\r\n        public isStackedLongText: boolean = false;\r\n    }\r\n\r\n    export function activeMap(items: any[], item: any): boolean[] {\r\n        let newMap: boolean[] = [];\r\n        if (!items) { return newMap; }\r\n        items.forEach((obj) => {\r\n            let val = false;\r\n            if (ElementUtil.areObjects(items)) {\r\n                val = _.isEqual(item, obj);\r\n            }\r\n            else {\r\n                val = item === obj;\r\n            }\r\n            newMap.push(val);\r\n        });\r\n        return newMap;\r\n    }\r\n\r\n    export function areObjects(items: any): boolean {\r\n        return !(items\r\n            && items.length\r\n            && items.length > 0\r\n            && items[0].constructor === String);\r\n    }\r\n\r\n    export function removeAllActiveChildren(elem: HTMLElement): void {\r\n        if (elem) {\r\n            const list: Element[] = Array.from(elem.getElementsByClassName(\"active\"));\r\n            if (list && list.length > 0) {\r\n                list.forEach((e) => {\r\n                    if (e.classList.contains(\"active\")) {\r\n                        e.classList.remove(\"active\");\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    export function setActiveFromActiveMap(elems: any[], activeMap: boolean[]): void {\r\n        if (elems) {\r\n            for (let i = 0; i < elems.length; i++) {\r\n                if (activeMap[i]) {\r\n                    elems[i].classList.add(\"active\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    export function setActiveNonZeroFromActiveMap(elems: any[], activeMap: boolean[]): void {\r\n        if (elems) {\r\n            let wasTrue = false;\r\n            for (let i = 1; i < elems.length; i++) {\r\n                if (activeMap[i - 1]) {\r\n                    wasTrue = true;\r\n                    elems[i].classList.add(\"active\");\r\n                }\r\n            }\r\n            if (!wasTrue) { elems[0].classList.add(\"active\"); }\r\n        }\r\n    }\r\n\r\n    export function setOptionFromActiveMap(elems: any[], activeMap: boolean[]): void {\r\n        let wasTrue = false;\r\n        if (elems && elems.length > 0) {\r\n            for (let i = 1; i < elems.length; i++) {\r\n                elems[i].selected = activeMap[i - 1];\r\n                if (activeMap[i - 1]) { wasTrue = true; }\r\n            }\r\n            if (!wasTrue) { elems[0].selected = true; }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default ElementUtil;\r\n","<template>\n    <div>\n        <!-- PAGE HEADER -->\n        <div class=\"slds-page-header slds-page-header_record-home\">\n            <div class=\"slds-page-header__row\">\n                <div class=\"slds-page-header__col-title\">\n                <div class=\"slds-media\">\n                    <div class=\"slds-media__figure\">\n                    <span class=\"slds-icon_container slds-icon-standard-case\">\n                        <svg class=\"slds-icon slds-page-header__icon\" aria-hidden=\"true\">\n                        <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"/resource/lightningdesign/icons/standard-sprite/svg/symbols.svg#case\" />\n                        </svg>\n                    </span>\n                    </div>\n                    <div class=\"slds-media__body\">\n                    <div class=\"slds-page-header__name\">\n                        <div class=\"slds-page-header__name-title\">\n                        <h1>\n                            <span>HACKATHON</span>\n                            <span if.bind=\"RecordTypeName == 'General_Requests'\" class=\"slds-page-header__title slds-truncate\" title=\"New Chat\">Tiny Slack</span>\n                        </h1>\n                        </div>\n                    </div>\n                    </div>\n                </div>\n                </div>\n            </div>\n        </div>\n        <!-- / PAGE HEADER -->\n        \n        <div class=\"slds-section slds-is-open full forcePageBlockSection forcePageBlockSectionEdit\">\n\n            <!-- NEW CASE FORM -->\n            <fieldset class=\"slds-box slds-theme--default slds-container--large\" if.bind=\"isLoaded && !blnIsSaving\">\n                <legend class=\"slds-text-heading--small slds-p-vertical--medium\">Tiny Slack</legend>\n                <h3 class=\"slds-section__title slds-theme--shade\">\n                    <span class=\"section-header-title slds-p-horizontal--small slds-truncate\">Chat Here</span>\n                </h3>\n                <div class=\"slds-section__content section__content\">\n                    <div class=\"slds-form slds-form_horizontal\">\n                        <div class=\"slds-grid slds-gutters_small\">\n                            <div class=\"slds-col slds-has-flexi-truncate slds-grid\">\n                                <div class=\"slds-col\">\n                                    <ce-input label=\"Message\" item.bind=\"strMessage\" required.bind=\"true\"></ce-input>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>  \n                <footer class=\"slds-card__footer slds-align_absolute-center\">\n                        <!-- <button type=\"button\" class=\"slds-button slds-button_neutral\" click.delegate=\"Cancel()\">Cancel</button> -->\n                        <button type=\"button\" class=\"slds-button slds-button_brand\" click.delegate=\"Save()\">Send Message</button>\n                </footer>       \n            </fieldset>\n\n\n        </div>\n\n        <!-- / NEW CASE FORM -->\n\n        <!-- ERROR MODAL -->\n        <ce-modal bln-is-error-modal=\"true\" show.bind=\"currentErrorMessage != null && currentErrorMessage != ''\" icon='error' instructions.bind='currentErrorMessage' button-text='Close' callback.bind='closeError'></ce-modal>\n        <!-- <ce-modal bln-is-error-modal=\"true\" show.bind=\"data.criticalErrors.size > 0\" icon='error' instructions.bind='data.criticalErrors[0].faultcode' button-text='Close' callback.bind='closeError'></ce-modal> -->\n        <!-- / ERROR MODAL -->\n\n        <!-- BLOCK UI -->\n        <div class=\"slds-spinner_container\" show.bind=\"isLoading\">\n            <div role=\"status\" class=\"slds-spinner slds-spinner_large slds-spinner_brand\">\n            <span class=\"slds-assistive-text\">Loading</span>\n            <div class=\"slds-spinner__dot-a\"></div>\n            <div class=\"slds-spinner__dot-b\"></div>\n            </div>\n        </div>\n        <!-- / BLOCK UI --> \n    </div>\n</template>","<template>\r\n\t<!-- label with warning-->\r\n\t<label class=\"label\" if.bind=\"label\">${label}\r\n\t\t<span class=\"sub-label\" if.bind=\"instructions\">${instructions}</span>\r\n\t</label>\r\n\t<p class=\"help is-danger\" if.bind=\"required && !isValid\">${errorMsg}</p>\r\n\t<p class=\"help is-warning\" if.bind=\"isWarning\">${warningMsg}</p>\r\n\t<!-- if value attrbute doesn't exist-->\r\n\t<div class=\"control\" ref=\"_formGroup\" if.bind=\"_areObjects && !valueAttribute\" repeat.for=\"i of items\">\r\n\t\t<label class=\"checkbox\">\r\n\t\t\t<input class=\"${required && !isValid ? 'has-text-danger' : ''} ${isOverrideInvalid ? 'has-text-danger': ''}\" type=\"checkbox\" disabled.bind=\"disabled\" checked.bind=\"selectedItems\" model.bind=\"i\" change.delegate=\"_changed($event, $index)\"/> ${i[displayAttribute]}\r\n\t\t</label>\r\n\t</div>\r\n\t<!--if value attribute exists-->\r\n\t<div class=\"control\" ref=\"_formGroup\" if.bind=\"_areObjects && valueAttribute\" repeat.for=\"i of items\">\r\n\t\t<label class=\"checkbox\">\r\n\t\t\t<input class=\"${required && !isValid ? 'has-text-danger' : ''} ${isOverrideInvalid ? 'has-text-danger': ''}\" type=\"checkbox\" disabled.bind=\"disabled\" checked.bind=\"selectedItems\" value.bind=\"i[valueAttribute]\" change.delegate=\"_changed($event, $index)\"/> ${i[displayAttribute]}\r\n\t\t</label>\r\n\t</div>\r\n\t<!--if it's a list of strings-->\r\n\t<div class=\"control\" ref=\"_formGroup\" if.bind=\"!_areObjects\" repeat.for=\"i of items\">\r\n\t\t<label class=\"checkbox\">\r\n\t\t\t<input class=\"${required && !isValid ? 'has-text-danger' : ''} ${isOverrideInvalid ? 'has-text-danger': ''}\" type=\"checkbox\" disabled.bind=\"disabled\" checked.bind=\"selectedItems\" model.bind=\"i\" change.delegate=\"_changed($event, $index)\"/> ${i}\r\n\t\t</label>\r\n\t</div>\r\n</template>","<template>\r\n\t<div class=\"slds-form-element slds-p-vertical_xx-small ${required && !isValid ? 'slds-has-error' : ''} ${isOverrideInvalid ? 'slds-has-error': ''}\">\r\n\t\t<label class=\"slds-form-element__label ${required ? 'required' : ''}\" if.bind=\"label\" for=\"text-input-id-1\">\r\n\t\t\t<abbr if.bind=\"required\" class=\"${required ? 'slds-required' : ''}\" title=\"required\">*</abbr>${label}\r\n\t\t\t<span class=\"sub-label\" if.bind=\"instructions\">${instructions}</span>\r\n\t\t</label>\r\n\t\t<div class=\"slds-form-element__control slds-input-has-icon slds-input-has-icon_right\" ref=\"_formGroup\">\r\n\t\t\t<input class=\"slds-input ${required && !isValid ? 'is-danger' : ''} ${isOverrideInvalid ? 'is-danger': ''}\" ref=\"_input\" disabled.bind=\"disabled\" change.delegate=\"_changed($event)\" blur.trigger=\"_blurFunc($event)\" focus.trigger=\"show()\" placeholder.bind=\"placeholder\" value.bind=\"_datevalue\"/>\r\n\t\t\t<button class=\"slds-button slds-button_icon slds-input__icon slds-input__icon_right\" title=\"Select a date\" click.delegate=\"show()\">\r\n\t\t\t\t<svg class=\"slds-button__icon\" aria-hidden=\"true\">\r\n\t\t\t\t\t<use xlink:href=\"/resource/lightningdesign/icons/utility-sprite/svg/symbols.svg#event\">\r\n\t\t\t\t\t</use>\r\n\t\t\t\t</svg>\r\n\t\t\t\t<span class=\"slds-assistive-text\">Select a date</span>\r\n\t\t\t</button>\r\n\t\t\t<p class=\"help is-danger\" if.bind=\"required && !isValid\">${errorMsg}</p>\r\n\t\t\t<p class=\"help is-warning\" if.bind=\"isWarning\">${warningMsg}</p>\r\n\t\t</div>\r\n\t\t<div show.bind=\"_isOpen\" id=\"dtpickerdialog\" class=\"slds-datepicker slds-dropdown\" role=\"dialog\">\r\n\t\t</div>\r\n\t\t<div class=\"slds-form-element__control\" show.bind=\"showInlineHelp && !_isOpen\">\t\t\t\r\n\t\t\t<div class=\"slds-form-element__help\">\r\n\t\t\t\t<span if.bind=\"!showInlineHelpLink\">${inlineHelpMsg}</span>\r\n\t\t\t\t<a if.bind=\"showInlineHelpLink\" href.bind=\"inlineHelpLink\" class=\"slds-text-link_reset\" target=\"_blank\">${inlineHelpMsg}<span class=\"slds-text-link\">${inlineHelpLinkText}</span>${inlineHelpMsgAfterLink}</a>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>","<template>\n    <div class=\"slds-form-element slds-p-vertical_xx-small ${required && !isValid ? 'slds-has-error' : ''} ${isOverrideInvalid ? 'slds-has-error': ''}\">\n        <label class=\"slds-form-element__label ${required && !isValid ? 'has-text-danger' : ''} ${isOverrideInvalid ? 'has-text-danger': ''}\" if.bind=\"label\">\n            <abbr if.bind=\"required\" class=\"slds-required\" title=\"required\">*</abbr> ${label}</label>\n        <div class=\"slds-form-element__control\" ref=\"_formGroup\">\n            <div class=\"slds-select_container ${required && !isValid ? 'is-danger' : ''} ${isOverrideInvalid ? 'is-danger': ''}\">\n                <select aria-describedby=\"error-02\" class=\"slds-select\" value.bind=\"_item\" change.delegate=\"_changed($event, $index)\" disabled.bind=\"disabled\">\n                    <option>Please select</option>\n                    <option repeat.for=\"i of items\" selected.bind=\"_activeMap[$index]\" model.bind=\"i\" innerhtml.bind=\"_areObjects ? i[displayAttribute] : i\"></option>\n                </select>\n            </div>\n            <div class=\"slds-form-element__help\" id=\"error-02\" if.bind=\"required && !isValid\">${errorMsg}</div>\n            <div class=\"slds-form-element__help\" id=\"error-03\" if.bind=\"isWarning\">${warningMsg}</div>\n        \n            <div if.bind=\"infoMsg\" class=\"slds-notify slds-notify_alert slds-theme_alert-texture slds-theme_info\" role=\"alert\">\n                <span class=\"slds-assistive-text\">info</span>\n                <span class=\"slds-icon_container slds-icon-utility-info_alt slds-m-right_x-small\">\n                    <svg class=\"slds-icon slds-icon_x-small\" aria-hidden=\"true\">\n                    <use xlink:href=\"/resource/lightningdesign/icons/utility-sprite/svg/symbols.svg#info_alt\"></use>\n                    </svg>\n                </span>\n                <h2>${infoMsg}\n                </h2>\n            </div>\n        </div>\n    </div>\n</template>","<template>\r\n\t<!-- label with warning-->\r\n\t<!-- <label class=\"label\" if.bind=\"label\">${label}\r\n\t\t<span class=\"sub-label\" if.bind=\"instructions\">${instructions}</span>\r\n\t</label>\r\n\t<p class=\"help is-danger\" if.bind=\"required && !isValid\">${errorMsg}</p>\r\n\t<p class=\"help is-warning\" if.bind=\"isWarning\">${warningMsg}</p> -->\r\n\t<!-- if value attrbute doesn't exist-->\r\n\t<!-- <div class=\"control\" ref=\"_formGroup\" if.bind=\"_areObjects && !valueAttribute\" repeat.for=\"i of items\">\r\n\t\t<label class=\"checkbox\">\r\n\t\t\t<input class=\"${required && !isValid ? 'has-text-danger' : ''} ${isOverrideInvalid ? 'has-text-danger': ''}\" type=\"checkbox\" disabled.bind=\"disabled\" checked.bind=\"selectedItems\" model.bind=\"i\" change.delegate=\"_changed($event, $index)\"/> ${i[displayAttribute]}\r\n\t\t</label>\r\n\t</div> -->\r\n\t<!--if value attribute exists-->\r\n\t<!-- <div class=\"control\" ref=\"_formGroup\" if.bind=\"_areObjects && valueAttribute\" repeat.for=\"i of items\">\r\n\t\t<label class=\"checkbox\">\r\n\t\t\t<input class=\"${required && !isValid ? 'has-text-danger' : ''} ${isOverrideInvalid ? 'has-text-danger': ''}\" type=\"checkbox\" disabled.bind=\"disabled\" checked.bind=\"selectedItems\" value.bind=\"i[valueAttribute]\" change.delegate=\"_changed($event, $index)\"/> ${i[displayAttribute]}\r\n\t\t</label>\r\n\t</div> -->\r\n\t<!--if it's a list of strings-->\r\n\t<!-- <div class=\"control\" ref=\"_formGroup\" if.bind=\"!_areObjects\" repeat.for=\"i of items\">\r\n\t\t<label class=\"checkbox\">\r\n\t\t\t<input class=\"${required && !isValid ? 'has-text-danger' : ''} ${isOverrideInvalid ? 'has-text-danger': ''}\" type=\"checkbox\" disabled.bind=\"disabled\" checked.bind=\"selectedItems\" model.bind=\"i\" change.delegate=\"_changed($event, $index)\"/> ${i}\r\n\t\t</label>\r\n\t</div> -->\r\n\r\n\t<div class=\"slds-form-element\">\r\n\t\t<span id=\"picklist-group-label\" class=\"slds-form-element__label slds-form-element__legend\">${label}</span>\r\n\t\t<div class=\"slds-form-element__control\">\r\n\t\t\t<div class=\"slds-dueling-list\">\r\n\t\t\t\t<div class=\"slds-assistive-text\" id=\"drag-live-region\"></div>\r\n\t\t\t\t<div class=\"slds-assistive-text\" id=\"option-drag-label\">Press space bar when on an item, to move it within the list. CMD plus left and right arrow keys, to move items between lists.</div>\r\n\t\t\t\t<div class=\"slds-dueling-list__column\">\r\n\t\t\t\t\t<span class=\"slds-form-element__label\" id=\"label-27\">Available</span>\r\n\t\t\t\t\t<div class=\"slds-dueling-list__options\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<select multiple value.bind=\"selectedValues\" ref=\"sel\" style=\"width: 10em;\">\r\n\t\t\t\t\t\t\t\t<option value=\"opt1\">Atlas - Security</option>\r\n\t\t\t\t\t\t\t\t<option value=\"opt2\">BI Connector</option>\r\n\t\t\t\t\t\t\t\t<option value=\"opt3\">Compass</option>\r\n\t\t\t\t\t\t\t\t<option value=\"opt4\">Configuration</option>\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<ul aria-describedby=\"option-drag-label\" aria-labelledby=\"label-27\" aria-multiselectable=\"true\" class=\"slds-listbox slds-listbox_vertical\" role=\"listbox\">\r\n\t\t\t\t\t\t\t<li role=\"presentation\" class=\"slds-listbox__item\">\r\n\t\t\t\t\t\t\t\t<div class=\"slds-listbox__option slds-listbox__option_plain slds-media slds-media_small slds-media_inline\" draggable=\"true\" role=\"option\" tabindex=\"-1\" aria-selected=\"true\">\r\n\t\t\t\t\t\t\t\t\t<span class=\"slds-media__body\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"slds-truncate\" title=\"Arabic\">Atlas - Security</span>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li role=\"presentation\" class=\"slds-listbox__item\">\r\n\t\t\t\t\t\t\t\t<div class=\"slds-listbox__option slds-listbox__option_plain slds-media slds-media_small slds-media_inline\" draggable=\"true\" role=\"option\" tabindex=\"-1\" aria-selected=\"false\">\r\n\t\t\t\t\t\t\t\t\t<span class=\"slds-media__body\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"slds-truncate\" title=\"Dutch\">BI Connector</span>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"slds-dueling-list__column\">\r\n\t\t\t\t\t<button class=\"slds-button slds-button_icon slds-button_icon-container\" title=\"Move Selection to Selected Languages\">\r\n\t\t\t\t\t\t<svg class=\"slds-button__icon\" aria-hidden=\"true\">\r\n\t\t\t\t\t\t\t<use xlink:href=\"/assets/icons/utility-sprite/svg/symbols.svg#right\"></use>\r\n\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t<span class=\"slds-assistive-text\">Move Selection to Selected Components</span>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button class=\"slds-button slds-button_icon slds-button_icon-container\" title=\"Move Selection to Available Languages\">\r\n\t\t\t\t\t\t<svg class=\"slds-button__icon\" aria-hidden=\"true\">\r\n\t\t\t\t\t\t\t<use xlink:href=\"/assets/icons/utility-sprite/svg/symbols.svg#left\"></use>\r\n\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t<span class=\"slds-assistive-text\">Move Selection to Available Components</span>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"slds-dueling-list__column\">\r\n\t\t\t\t\t<span class=\"slds-form-element__label\" id=\"label-28\">Chosen</span>\r\n\t\t\t\t\t<div class=\"slds-dueling-list__options\">\r\n\t\t\t\t\t\t<ul aria-describedby=\"option-drag-label\" aria-labelledby=\"label-28\" aria-multiselectable=\"true\" class=\"slds-listbox slds-listbox_vertical\" role=\"listbox\">\r\n\t\t\t\t\t\t\t<li role=\"presentation\" class=\"slds-listbox__item\">\r\n\t\t\t\t\t\t\t\t<div class=\"slds-listbox__option slds-listbox__option_plain slds-media slds-media_small slds-media_inline\" draggable=\"true\" role=\"option\" tabindex=\"0\">\r\n\t\t\t\t\t\t\t\t\t<span class=\"slds-media__body\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"slds-truncate\" title=\"Chinese\">Compass</span>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li role=\"presentation\" class=\"slds-listbox__item\">\r\n\t\t\t\t\t\t\t\t<div class=\"slds-listbox__option slds-listbox__option_plain slds-media slds-media_small slds-media_inline\" draggable=\"true\" role=\"option\" tabindex=\"-1\">\r\n\t\t\t\t\t\t\t\t\t<span class=\"slds-media__body\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"slds-truncate\" title=\"English\">Configuration</span>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>","<template>\n    <div class=\"slds-form-element slds-p-vertical_xx-small ${required && !isValid ? 'slds-has-error' : ''} ${isOverrideInvalid ? 'slds-has-error': ''}\">\n        <label class=\"slds-form-element__label ${required ? 'required' : ''}\" if.bind=\"label\" for=\"text-input-id-1\">\n            <abbr if.bind=\"required\" class=\"${required ? 'slds-required' : ''}\" title=\"required\">*</abbr>${label}\n            <span class=\"sub-label\" if.bind=\"instructions\">${instructions}</span>\n        </label>\n        <div class=\"slds-form-element__control\" ref=\"_formGroup\">\n            <!-- if it's just text-->\n            <input aria-describedby=\"error-message\" id=\"text-input-id-1\" class=\"slds-input ${required && !isValid ? 'is-danger' : ''} ${isOverrideInvalid ? 'is-danger': ''}\" placeholder.bind=\"placeholder\" disabled.bind=\"disabled\" if.bind=\"!isLong && !isNumber\" change.delegate=\"_changed($event)\" input.bind=\"input($event)\" value.bind=\"item\"/>\n            <!-- if it's a number-->\n            <input aria-describedby=\"error-message\" id=\"text-input-id-1\" class=\"slds-input ${required && !isValid ? 'is-danger' : ''} ${isOverrideInvalid ? 'is-danger': ''}\" placeholder.bind=\"placeholder\" disabled.bind=\"disabled\" if.bind=\"!isLong && isNumber\" type=\"number\" change.delegate=\"_changed($event)\" input.bind=\"input($event)\" value.bind=\"item\"/>\n            <!-- if it's a textarea-->\n            <textarea aria-describedby=\"error-message\" id=\"text-input-id-1\" class=\"slds-textarea ${required && !isValid ? 'is-danger' : ''} ${isOverrideInvalid ? 'is-danger': ''}\" placeholder.bind=\"placeholder\" disabled.bind=\"disabled\" if.bind=\"isLong\" change.delegate=\"_changed($event)\" input.bind=\"input($event)\" value.bind=\"item\" maxlength=\"32000\" rows=\"6\"></textarea>\n            <div class=\"slds-form-element__help\" if.bind=\"showInlineHelp\">\n                <span if.bind=\"!showInlineHelpLink\">${inlineHelpMsg}</span>\n                <a if.bind=\"showInlineHelpLink\" href.bind=\"inlineHelpLink\" class=\"slds-text-link_reset\" target=\"_blank\">${inlineHelpMsg}<span class=\"slds-text-link\">${inlineHelpLinkText}</span>${inlineHelpMsgAfterLink}</a>\n            </div>\n            <div id=\"error-message\" class=\"slds-form-element__help\" if.bind=\"required && !isValid && showError\">${errorMsg}</div>\n            <div id=\"error-message\" class=\"slds-form-element__help\" if.bind=\"isWarning\">${warningMsg}</div>\n        </div>\n    </div>\n</template>","<template>\n    <div>\n        <section role=\"dialog\" tabindex=\"-1\" aria-labelledby=\"modal-heading-01\" aria-modal=\"true\" aria-describedby=\"modal-content-id-1\" class=\"slds-modal slds-fade-in-open\">\n            <div class=\"slds-modal__container\" style=\"max-width:60em; width:100%;\">\n            <header class=\"slds-modal__header\" if.bind=\"blnIsErrorModal\">\n                <div class=\"demo-only\" style=\"height: 4rem;\">\n                    <div class=\"slds-notify_container slds-is-relative\">\n                        <div class=\"slds-notify slds-notify_toast slds-theme_error\" role=\"alert\">\n                            <span class=\"slds-assistive-text\">error</span>\n                            <span class=\"slds-icon_container slds-icon-utility-error slds-m-right_small slds-no-flex slds-align-top\" title=\"Description of icon when needed\">\n                                <svg class=\"slds-icon slds-icon_small\" aria-hidden=\"true\">\n                                <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"/resource/lightningdesign/icons/utility-sprite/svg/symbols.svg#${icon}\" />\n                                </svg>\n                            </span>\n                            <div class=\"slds-notify__content\">\n                                <h2 class=\"slds-text-heading_small \">There was an error with this app, the details on the error are below.</h2>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </header>\n            <header class=\"slds-modal__header\" if.bind=\"!blnIsErrorModal\">\n                <h2 id=\"modal-heading-01\" class=\"slds-text-heading_small slds-hyphenate\" innerhtml.bind=\"headerText\"></h2>\n            </header>\n            <div if.bind=\"instructions\" class=\"slds-modal__content slds-p-around_medium\" style=\"height: 20rem;\" id=\"modal-content-id-1\">\n                <p innerhtml.bind=\"instructions\"></p>\n            </div>\n            <footer class=\"slds-modal__footer\">\n                <button if.bind=\"buttonText\" class=\"slds-button slds-button_brand\" click.delegate=\"_callback()\">${buttonText}</button>\n                <button if.bind=\"altButtonText\" class=\"slds-button slds-button_neutral\" click.delegate=\"_altCallback()\">${altButtonText}</button>\n            </footer>\n            </div>\n        </section>\n        <div class=\"slds-backdrop slds-backdrop_open\"></div>\n    </div>\n</template>","<template>\r\n\t<div class=\"slds-form-element\">\r\n\t\t<label class=\"slds-form-element__label ${required ? 'required' : ''}\" if.bind=\"label\" for=\"text-input-id-1\">\r\n\t\t\t<abbr if.bind=\"required\" class=\"${required ? 'slds-required' : ''}\" title=\"required\">*</abbr>${label}\r\n\t\t\t<span class=\"sub-label\" if.bind=\"instructions\">${instructions}</span>\r\n\t\t</label>\r\n\t\t<div class=\"slds-form-element__control\">\r\n\t\t\t<div class=\"slds-dueling-list\">\r\n\t\t\t\t<div class=\"slds-assistive-text\" id=\"drag-live-region\"></div>\r\n\t\t\t\t<div class=\"slds-assistive-text\" id=\"option-drag-label\">Press space bar when on an item, to move it within the list. CMD plus left and right arrow keys, to move items between lists.</div>\r\n\t\t\t\t<div class=\"slds-dueling-list__column\">\r\n\t\t\t\t\t<span class=\"slds-form-element__label\" id=\"label-27\">Available</span>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<select multiple value.bind=\"selectedItems\" ref=\"sel\" class=\"slds-dueling-list__options slds-picklist__options\">\r\n\t\t\t\t\t\t\t<option value.bind=\"i.value\" repeat.for=\"i of items\">${i.label}</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"slds-dueling-list__column\">\r\n\t\t\t\t\t<button disabled=\"disabled\" class=\"slds-button slds-button_icon slds-button_icon-container\" title=\"\">\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"slds-dueling-list__column\">\r\n\t\t\t\t\t<span class=\"slds-form-element__label\" id=\"label-28\">Chosen</span>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<select disabled=\"disabled\" multiple ref=\"selectedlist\" class=\"slds-dueling-list__options slds-picklist__options\">\r\n\t\t\t\t\t\t\t<option value.bind=\"i\" repeat.for=\"i of selectedItems\">${i}</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div id=\"error-message\" class=\"slds-form-element__help\" if.bind=\"required && !isValid\">${errorMsg}</div>\r\n\t\t\t<div id=\"error-message\" class=\"slds-form-element__help\" if.bind=\"isWarning\">${warningMsg}</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>","<template>\r\n\t<!-- if typeahead is filled out-->\r\n\t<div class=\"slds-form-element slds-p-vertical_xx-small ${required && !isValid ? 'slds-has-error' : ''} ${isOverrideInvalid ? 'slds-has-error': ''}\" if.bind=\"_isSelected\">\r\n\t\t<label class=\"slds-form-element__label\" if.bind=\"label\" ref=\"_formGroup\">\r\n\t\t\t<abbr if.bind=\"required\" class=\"${required ? 'slds-required' : ''}\" title=\"required\">*</abbr>${!hasOtherSelected ? label : hasOtherLabel}\r\n\t\t\t<span class=\"slds-form-element__label\" if.bind=\"instructions\">${instructions}</span>\r\n\t\t</label>\r\n\t\t<!-- <div class=\"slds-form-element__control\">\r\n\t\t\t<span class=\"slds-input disabled ${required && !isValid ? 'is-danger' : ''} ${isOverrideInvalid ? 'is-danger': ''}\" innerhtml.bind=\"_selection ? _selection : hasOtherValue\"></span>\r\n\t\t\t<span class=\"icon is-small is-right\" click.delegate=\"clearSelection()\">\r\n\t\t\t\t<i class=\"fa fa-times-circle\"></i>\r\n\t\t\t</span>\r\n\t\t</div> -->\r\n\t\t<div class=\"slds-form-element__control slds-input-has-icon ${selectedrecordicon ? 'slds-input-has-icon_left-right' : 'slds-input-has-icon_right'}\">\r\n\t\t\t<div class=\"slds-combobox__form-element slds-input-has-icon slds-input-has-icon_left-right\">\r\n\t\t\t\t<span if.bind=\"selectedrecordicon\" class=\"slds-icon_container slds-icon-standard-${selectedrecordicon} slds-combobox__input-entity-icon\" title=\"${selectedrecordicon}\">\r\n\t\t\t\t\t<svg class=\"slds-icon slds-icon_small\" aria-hidden=\"true\">\r\n\t\t\t\t\t\t<use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"/resource/lightningdesign/icons/standard-sprite/svg/symbols.svg#${selectedrecordicon}\" />\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t\t<span class=\"slds-assistive-text\">${selectedrecordicon}</span>\r\n\t\t\t\t</span>\r\n\t\t\t\t<span class=\"slds-input disabled ${required && !isValid ? 'is-danger' : ''} ${isOverrideInvalid ? 'is-danger': ''}\" innerhtml.bind=\"_selection ? _selection : hasOtherValue\">\r\n\t\t\t\t</span>\r\n\t\t\t\t<button class=\"slds-button slds-button_icon slds-input__icon slds-input__icon_right\" title=\"Remove selected option\" click.delegate=\"clearSelection()\">\r\n\t\t\t\t\t<svg class=\"slds-button__icon\" aria-hidden=\"true\">\r\n\t\t\t\t\t<use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"/resource/lightningdesign/icons/utility-sprite/svg/symbols.svg#close\"/>\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t\t<span class=\"slds-assistive-text\">Remove selected option</span>\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<!-- if typeahead isn't filled out-->\r\n\t<div class=\"slds-form-element slds-p-vertical_xx-small ${required && !isValid ? 'slds-has-error' : ''} ${isOverrideInvalid ? 'slds-has-error': ''}\" if.bind=\"!_isSelected\">\r\n\t\t<label class=\"slds-form-element__label\" if.bind=\"label\" ref=\"_formGroup\">\r\n\t\t\t<abbr if.bind=\"required\" class=\"${required ? 'slds-required' : ''}\" title=\"required\">*</abbr>${!hasOtherSelected ? label : hasOtherLabel}\r\n\t\t\t<span class=\"slds-form-element__label\" if.bind=\"instructions\">${instructions}</span>\r\n\t\t</label>\r\n\t\t<div class=\"slds-form-element__control\">\r\n\t\t\t<div class=\"slds-combobox_container slds-has-inline-listbox\">\r\n\t\t\t\t<div class=\"slds-combobox slds-dropdown-trigger slds-dropdown-trigger_click ${isOpen ? 'slds-is-open' : 'slds-combobox-lookup'}\" aria-expanded=\"false\" aria-haspopup=\"listbox\" role=\"combobox\">\r\n\t\t\t\t\t<div class=\"slds-form-element__control slds-input-has-icon slds-input-has-icon_right\">\r\n\t\t\t\t\t\t<svg class=\"slds-icon slds-input__icon slds-input__icon_right slds-icon-text-default\" aria-hidden=\"true\">\r\n\t\t\t\t\t\t\t<use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"/resource/lightningdesign/icons/utility-sprite/svg/symbols.svg#search\" />\r\n\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t<input class=\"slds-input slds-combobox__input\" aria-activedescendant=\"listbox-option-unique-id-01\" ref=\"_input\" type=\"text\" aria-describedby=\"error-message\" aria-autocomplete=\"list\" aria-controls=\"listbox-unique-id\" autocomplete=\"off\" disabled.bind=\"disabled\" placeholder.bind=\"placeholder\" input.delegate=\"_queryChanged($event) & throttle:200 & debounce:600\" focus.trigger=\"_focusFunc($event)\" blur.trigger=\"_blurFunc($event)\" value.bind=\"query\">\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div id=\"listbox-unique-id\" role=\"listbox\" class=\"slds-dropdown slds-dropdown_length-with-icon-7 slds-dropdown_fluid\" show.bind=\"isOpen\">\r\n\t\t\t\t\t\t<ul class=\"slds-listbox slds-listbox_vertical  slds-dropdown_fluid\" role=\"presentation\">\r\n\t\t\t\t\t\t\t<!-- <li show.bind=\"results && query\" role=\"presentation\" class=\"slds-listbox__item\">\r\n\t\t\t\t\t\t\t\t<div aria-selected=\"true\" id=\"option0\" class=\"slds-media slds-listbox__option slds-listbox__option_entity slds-listbox__option_term slds-has-focus\" role=\"option\">\r\n\t\t\t\t\t\t\t\t\t<span class=\"slds-media__figure\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"slds-icon_container slds-icon-utility-search\" title=\"Search for term: \">\r\n\t\t\t\t\t\t\t\t\t\t\t<svg class=\"slds-icon slds-icon_x-small slds-icon-text-default\" aria-hidden=\"true\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"/resource/lightningdesign/icons/utility-sprite/svg/symbols.svg#search\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"slds-assistive-text\">Search for term: </span>\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t<span class=\"slds-media__body\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"slds-listbox__option-text slds-listbox__option-text_entity\">${query}</span>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li> -->\r\n\t\t\t\t\t\t\t<li show.bind=\"query\" role=\"presentation\" class=\"slds-listbox__item\" style=\"margin-left:0rem !important;\">\r\n\t\t\t\t\t\t\t\t<div aria-selected=\"true\" id=\"option0\" class=\"slds-media slds-listbox__option slds-listbox__option_entity slds-listbox__option_term\" role=\"option\">\r\n\t\t\t\t\t\t\t\t\t<span class=\"slds-media__figure slds-listbox__option-icon\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"slds-icon_container slds-icon-utility-search\" title=\"Search for term: \">\r\n\t\t\t\t\t\t\t\t\t\t\t<svg class=\"slds-icon slds-icon_x-small slds-icon-text-default\" aria-hidden=\"true\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<use xlink:href=\"/resource/lightningdesign/icons/utility-sprite/svg/symbols.svg#search\"></use>\r\n\t\t\t\t\t\t\t\t\t\t\t</svg><span class=\"slds-assistive-text\">Search for term: </span>\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t<span class=\"slds-media__body\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"slds-listbox__option-text slds-listbox__option-text_entity\">${query}</span>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li role=\"presentation\" class=\"slds-listbox__item\" repeat.for=\"res of results\" innerhtml.bind=\"res.html\" mousedown.delegate=\"selectingFunc($event, res)\" style=\"margin-left:0rem !important;\">\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<!-- <p class=\"help is-danger\" if.bind=\"required && !isValid\">${errorMsg}</p> -->\r\n\t\t\t<div id=\"error-message\" class=\"slds-form-element__help\" if.bind=\"required && !isValid\">${errorMsg}</div>\r\n\t\t\t<div class=\"slds-form-element__help\" if.bind=\"showInlineHelp\">\r\n\t\t\t\t<span if.bind=\"!showInlineHelpLink\">${inlineHelpMsg}</span>\r\n\t\t\t\t<a if.bind=\"showInlineHelpLink\" href.bind=\"inlineHelpLink\" class=\"slds-text-link_reset\" target=\"_blank\">${inlineHelpMsg}<span class=\"slds-text-link\">${inlineHelpLinkText}</span>${inlineHelpMsgAfterLink}</a>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>","template\r\n\t.control(ref='_formGroup')\r\n\t\tlabel.checkbox\r\n\t\t\tinput(type='checkbox', checked.bind='item', value.one-way='item', disabled.bind='disabled', class=\"${item === true ? 'active' : ''} ${required && !isValid ? 'has-text-danger' : ''} ${isOverrideInvalid ? 'has-text-danger': + ''}\")\r\n\t\t\t|  ${label}\r\n\t\t\tspan.sub-label(if.bind='secondaryLabel') ${secondaryLabel}\r\n\t\tp.help.is-danger(if.bind='required && !isValid') ${errorMsg}\r\n\t\tp.help.is-warning(if.bind='isWarning') ${warningMsg}","template\r\n  form.uplodr\r\n    .containr\r\n      i.fa.fa-upload.fa-2x\r\n      p.field Drag Files Here\r\n      p.field.hr-word or\r\n      span.button.is-primary.is-medium Browse\r\n    // not sure what files we should accept; can be changed below\r\n    input.inpt#image_uploads(type='file', name='image_uploads', accept='.jpg, .jpeg, .png', multiple='')\r\n  ul.uplodr-list\r\n    // li would be dynamic based on the file(s) uploaded.\r\n    li.uplodr-list-item\r\n      a.fa.fa-times.is-info.remove(href=\"#\")\r\n      | {name of file}\r\n      span.status Complete\r\n    li.uplodr-list-item\r\n      a.fa.fa-times.is-info.remove(href=\"#\")\r\n      | {name of file}\r\n      span.status Complete\r\n    li.uplodr-list-item.has-error\r\n      a.fa.fa-times.is-info.remove(href=\"#\")\r\n      | {name of file}\r\n      span.status File too large","template\r\n\tlabel.label(class=\"${required && !isValid ? 'has-text-danger' : ''} ${isOverrideInvalid ? 'has-text-danger': ''}\") ${label}\r\n\t\tspan.sub-label(if.bind='instructions') ${instructions}\r\n\t.control.has-icons-left(ref=\"_formGroup\")\r\n\t\tinput.input(placeholder.bind=\"placeholder\" disabled.bind=\"disabled\" type=\"number\" change.delegate=\"_changed($event)\" input.bind=\"input($event)\" value.bind=\"item\", class=\"${required && !isValid ? 'is-danger' : ''} ${isOverrideInvalid ? 'is-danger': ''}\")\r\n\t\tspan.icon.is-left\r\n\t\t\ti.fa.fa-usd\r\n\tp.help.is-danger(if.bind='required && !isValid') ${errorMsg}\r\n\tp.help.is-warning(if.bind='isWarning') ${warningMsg}","template\r\n  label.label(if.bind='label', class=\"${required ? 'required' : ''} ${!isValid ? 'has-text-danger' : ''} ${isOverrideInvalid ? 'has-text-danger': ''}\") ${label}\r\n    span.sub-label(if.bind='instructions') ${instructions}\r\n  .control(ref='_formGroup')\r\n    // if it's just text\r\n    input.input(ref=\"_input\", maxlength.bind=\"maxlength\", keyup.trigger=\"keyupFunc($event)\", blur.trigger=\"onblurFunc($event)\", placeholder.bind='placeholder', disabled.bind='disabled', if.bind='!isLong && !isNumber', change.delegate='_changed($event)', input.bind='input($event)', value.bind='item', class=\"${required && !isValid ? 'is-danger' : ''} ${isOverrideInvalid ? 'is-danger': ''}\")\r\n    // if it's a number\r\n    input.input(ref=\"_input\", maxlength.bind=\"maxlength\", keyup.trigger=\"keyupFunc($event)\", blur.trigger=\"onblurFunc($event)\", placeholder.bind='placeholder', disabled.bind='disabled', if.bind='!isLong && isNumber', type='number', change.delegate='_changed($event)', input.bind='input($event)', value.bind='item', class=\"${required && !isValid ? 'is-danger' : ''} ${isOverrideInvalid ? 'is-danger': ''}\")\r\n    // if it's a textarea\r\n    textarea.textarea(placeholder.bind='placeholder', disabled.bind='disabled', if.bind='isLong', change.delegate='_changed($event)', input.bind='input($event)', value.bind='item', class=\"${required && !isValid ? 'is-danger' : ''} ${isOverrideInvalid ? 'is-danger': ''}\")\r\n    p.help.is-danger(if.bind='required && !isValid && showError') ${errorMsg}\r\n    p.help.is-danger(if.bind='!required && !isValid && showError') ${invalidMsg}\r\n    p.help.is-warning(if.bind='isWarning') ${warningMsg}","template\r\n\tlabel.label(if.bind=\"label\", class=\"${required && !isValid ? 'has-text-danger' : ''} ${isOverrideInvalid ? 'has-text-danger': ''}\") ${label}\r\n\t\tspan.sub-label(if.bind=\"instructions\") ${instructions}\r\n\t.controls.has-radio-group(ref='_formGroup')\r\n\t\t.control(repeat.for=\"i of items\")\r\n\t\t\tinput(id.bind='_id+$index', type='radio', disabled.bind='disabled' checked.bind='_item' model.bind='i' change.delegate='_changed($event, $index)', name.bind='_id')\r\n\t\t\tlabel(for.bind='_id+$index') ${ _areObjects ? i[displayAttribute] : i}\r\n\tp.help.is-danger(if.bind='required && !isValid') ${errorMsg}\r\n\tp.help.is-warning(if.bind='isWarning') ${warningMsg}\r\n","template\r\n\tlabel.label(if.bind=\"label\", class=\"${required && !isValid ? 'has-text-danger' : ''} ${isOverrideInvalid ? 'has-text-danger': ''}\") ${label}\r\n\t\tspan.sub-label(if.bind=\"instructions\") ${instructions}\r\n\tp.help.is-danger(if.bind='required && !isValid') ${errorMsg}\r\n\tp.help.is-warning(if.bind='isWarning') ${warningMsg}\r\n\t// if it's just a radio list\r\n\t.control(ref='_formGroup', repeat.for=\"i of items\")\r\n\t\tlabel.radio\r\n\t\t\tinput(type='radio', disabled.bind=\"disabled\" checked.bind=\"_item\" model.bind=\"i\" change.delegate=\"_changed($event, $index)\")\r\n\t\t\t|  ${ _areObjects ? i[displayAttribute] : i}","template\r\n  label.label(if.bind='label', class=\"${required ? 'required' : ''} ${required && !isValid ? 'has-text-danger' : ''} ${isOverrideInvalid ? 'has-text-danger': ''}\") ${label}\r\n    span.sub-label(if.bind='instructions') ${instructions}\r\n  .control(ref='_formGroup')\r\n    // if it's just text\r\n    input.input(ref=\"_input\", maxlength.bind=\"maxlength\", keyup.trigger=\"keyupFunc($event)\", blur.trigger=\"onblurFunc($event)\", placeholder.bind='placeholder', disabled.bind='disabled', if.bind='!isLong && !isNumber', change.delegate='_changed($event)', input.bind='input($event)', value.bind='item', class=\"${required && !isValid ? 'is-danger' : ''} ${isOverrideInvalid ? 'is-danger': ''}\")\r\n    // if it's a number\r\n    input.input(ref=\"_input\", maxlength.bind=\"maxlength\", keyup.trigger=\"keyupFunc($event)\", blur.trigger=\"onblurFunc($event)\", placeholder.bind='placeholder', disabled.bind='disabled', if.bind='!isLong && isNumber', type='number', change.delegate='_changed($event)', input.bind='input($event)', value.bind='item', class=\"${required && !isValid ? 'is-danger' : ''} ${isOverrideInvalid ? 'is-danger': ''}\")\r\n    // if it's a textarea\r\n    textarea.textarea(placeholder.bind='placeholder', disabled.bind='disabled', if.bind='isLong', change.delegate='_changed($event)', input.bind='input($event)', value.bind='item', class=\"${required && !isValid ? 'is-danger' : ''} ${isOverrideInvalid ? 'is-danger': ''}\")\r\n    p.help.is-danger(if.bind='required && !isValid && showError') ${errorMsg}\r\n    p.help.is-danger(if.bind='!required && !isValid && showError') ${invalidMsg}\r\n    p.help.is-warning(if.bind='isWarning') ${warningMsg}","template\r\n  label.label.text(if.bind='label', class=\"${required ? 'required' : ''} ${required && !isValid ? 'has-text-danger' : ''} ${isOverrideInvalid ? 'has-text-danger': ''}\") ${label}\r\n    span.sub-label(if.bind='instructions') ${instructions}\r\n  .control.text(ref='_formGroup')\r\n    span(placeholder.bind='placeholder', disabled.bind='disabled', change.delegate='_changed($event)', input.bind='input($event)', class=\"${required && !isValid ? 'is-danger' : ''} ${isOverrideInvalid ? 'is-danger': ''} ${inline ? 'inline' : ''}\") ${item}\r\n    p.help.is-danger(if.bind='required && !isValid && showError') ${errorMsg}\r\n    p.help.is-warning(if.bind='isWarning') ${warningMsg}\r\n"],"sourceRoot":".."}